Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\r\nimport os\r\nimport random\r\nimport sys\r\n\r\nimport pygame\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\ndef newDialog():\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1 = font.render('', True, (255, 255, 255))\r\n    render_fraze_2 = font.render('', True, (255, 255, 255))\r\n    render_fraze_3 = font.render('', True, (255, 255, 255))\r\n    return render_fraze_1, render_fraze_2, render_fraze_3\r\n\r\n\r\ndef mathGame(m):\r\n    global background, all_sprites, player_group, player, door, \\\r\n        door_group, rectangle_group, loc5, loc11, x, y\r\n    fon = pygame.transform.scale(load_image(m), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    a = random.randint(0, 100)\r\n    difference = random.randint(0, 9)\r\n    b = difference - a\r\n    if m == 'a1_m4.png':\r\n        fraze_1 = 'Я великий маг этого подземелья,'\r\n        fraze_2 = 'и я никому не дам ходить по нему'\r\n        fraze_3 = 'без моего разрешения!'\r\n    elif m == 'a2_m5.jpg':\r\n        fraze_1 = 'Вот мы снова встретились,'\r\n        fraze_2 = 'и в этот раз ты в моем лесу'\r\n        fraze_3 = 'дальше я тебя не пропущу!'\r\n    screen.fill((0, 0, 0))\r\n    screen.blit(fon, (0, 0))\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 20)\r\n    render_fraze_1, render_fraze_2, render_fraze_3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    k = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_z and k == 0:\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    if b < 0:\r\n                        question = f\"{a}{b}\"\r\n                    else:\r\n                        question = f\"{a} + {b}\"\r\n                    fraze_1 = 'Но ты можешь попытать удачу,'\r\n                    fraze_2 = 'и решить мою задачу'\r\n                    fraze_3 = 'сколько будет: ' + question\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    i = 1\r\n                    k = 1\r\n                elif 48 <= event.key <= 58 and k == 1:\r\n                    fraze_1 = event.key - 48\r\n                    render_fraze_1, render_fraze_2, render_fraze_3 = (\r\n                        newDialog())\r\n                    if fraze_1 == difference:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        fraze_1 = 'Я вижу, что ты неплох в математике'\r\n                        fraze_2 = 'на этот раз я тебя пропускаю,'\r\n                        fraze_3 = 'но мы еще встретимся!'\r\n                        win = True\r\n                    else:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        fraze_1 = 'Я вижу, что ты слаб,'\r\n                        fraze_2 = 'возвращайся,'\r\n                        fraze_3 = 'лишь когда будешь достоин'\r\n                    i = 1\r\n                    k = 2\r\n                elif event.key == pygame.K_z and k == 2:\r\n                    if win:\r\n                        if m == 'a1_m4.png':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a1_m5.png', (839, 1300))\r\n                            all_sprites.add(background)\r\n                            player = Player(419, 1100, 1)\r\n                            door = Door(362, 30, 1, 2)\r\n                            player.loc = 3\r\n                            loc5 = 0\r\n                        elif m == 'a2_m5.jpg':\r\n                            all_sprites = pygame.sprite.Group()\r\n                            player_group = pygame.sprite.Group()\r\n                            rectangle_group = pygame.sprite.Group()\r\n                            background = Background('a2_m6.jpg', (1700, 1000))\r\n                            all_sprites.add(background)\r\n                            player = Player(850, 500, 2)\r\n                            player.loc = 11\r\n                            door.rect.x = 20000\r\n                            door2.rect.x = 20000\r\n                            door3.rect.x = 20000\r\n                            x = player.x\r\n                            y = player.y\r\n                            loc11 = 0\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        if m == 'a1_m4.png':\r\n                            end_screen(1, False)\r\n                        elif m == 'a2_m5.jpg':\r\n                            end_screen(2, False)\r\n                        return\r\n\r\n        if i <= len(fraze_1):\r\n            render_fraze_1 = font.render(fraze_1[:i], True, (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2):\r\n            render_fraze_2 = font.render(fraze_2[:i - len(fraze_1)], True,\r\n                                         (255, 255, 255))\r\n        elif i <= len(fraze_1) + len(fraze_2) + len(fraze_3):\r\n            render_fraze_3 = font.render(\r\n                fraze_3[:i - len(fraze_1) - len(fraze_2)], True,\r\n                (255, 255, 255))\r\n        i += 1\r\n        screen.blit(render_fraze_1, (230, 85))\r\n        screen.blit(render_fraze_2, (230, 115))\r\n        screen.blit(render_fraze_3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\ndef end_screen(n, winOrdie):\r\n    fon = pygame.transform.scale(load_image('gameover.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n\r\n    font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n    font = pygame.font.Font(font_path, 35)\r\n    if winOrdie:\r\n        t = font.render(f\"Win\", True, (0, 0, 0))\r\n    else:\r\n        t = font.render(f\"Lose\", True, (0, 0, 0))\r\n    tm = (datetime.datetime.now() - time).total_seconds()\r\n    t2 = font.render(f\"{int(tm // 60)} min {int(tm - (tm // 60) * 60)} sec\",\r\n                     True, (0, 0, 0))\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    if n == 1:\r\n                        act1()\r\n                    elif n == 2:\r\n                        act2()\r\n                    elif n == 3:\r\n                        act3()\r\n                    return\r\n\r\n        screen.blit(t, (300, 200))\r\n        screen.blit(t2, (300, 300))\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background, door, door_group, \\\r\n        i, word_group, x, y, loc5, time\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.png', (1360, 760))\r\n    door = Door(1180, 440, 1, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    player = Player(290, 470, 1)\r\n    word_group = pygame.sprite.Group()\r\n    x, y = 0, 0\r\n    loc5 = 0\r\n    i = 0\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n\r\ndef act2():\r\n    global all_sprites, player_group, player, background, door, \\\r\n        door_group, time, x, y, door2, door3, pas, loc11, img\r\n    time = datetime.datetime.now()\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a2_m1.jpg', (3000, 1500))\r\n    door = Door(580, 840, 2, 1)\r\n    door2 = Door(1860, 540, 2, 1)\r\n    door3 = Door(580, 540, 2, 1)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    door_group.add(door2)\r\n    door_group.add(door3)\r\n    pas = Pass(1300, 700)\r\n    img = load_image('key.jpg')\r\n    img = pygame.transform.scale(img, (50, 50))\r\n    x, y = 0, 0\r\n    loc11 = 0\r\n    player = Player(1090, 720, 2)\r\n    player.loc = 6\r\n    camera.update(player)\r\n    for sprite in all_sprites:\r\n        camera.apply(sprite)\r\n\r\n\r\ndef act3():\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef menu():\r\n    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_1:\r\n                    act1()\r\n                    return\r\n                if event.key == pygame.K_2:\r\n                    act2()\r\n                    return\r\n                if event.key == pygame.K_3:\r\n                    act3()\r\n                    return\r\n                if event.key == pygame.K_p:\r\n                    return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y, stena, key=False, pas=False):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.loc = 0\r\n        self.key = key\r\n        self.pas = pas\r\n        self.run = 5\r\n        if stena == 1:\r\n            self.stena = [(2, 0, 0)]\r\n        elif stena == 2:\r\n            self.stena = [(34, 177, 76), (0, 162, 232)]\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.direction == 'left':\r\n            image = load_image(f'm.c.left_stop.jpg')\r\n        elif self.direction == 'right':\r\n            image = load_image(f'm.c.right_stop.jpg')\r\n        elif self.direction == 'down':\r\n            image = load_image(f'm.c.front_stop.jpg')\r\n        elif self.direction == 'up':\r\n            image = load_image(f'm.c.back_stop.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def update(self, move_up, move_down, move_left, move_right, passaa=None):\r\n        global all_sprites, background, player, player_group, door_group, \\\r\n            door, word_group, x, y, task_text, ok_tip, door2, door3, \\\r\n            chest, img, pas, rectangle_group, loc5, loc11\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= self.run\r\n            self.x -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x += self.run\r\n                self.x += self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.left_walk_{self.step}.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += self.run\r\n            self.x += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.x -= self.run\r\n                self.x -= self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.right_walk_{self.step}.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= self.run\r\n            self.y -= self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y += self.run\r\n                self.y += self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.back_walk_{self.step}.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += self.run\r\n            self.y += self.run\r\n            if background.get_rgb(self.x, self.y) in self.stena:\r\n                self.rect.y -= self.run\r\n                self.y -= self.run\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.front_walk_{self.step}.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):\r\n            print(player.loc)\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m2.png', (839, 1300))\r\n                all_sprites.add(background)\r\n                player = Player(419, 950, 1)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 419\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(363, 48, 1, 2)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m3.png', (2100, 500))\r\n                all_sprites.add(background)\r\n                door = Door(1800, 200, 1, 1)\r\n                player = Player(200, 330, 1)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a1_m4.png', (700, 500))\r\n                all_sprites.add(background)\r\n                player = Player(375, 300, 1)\r\n                player.loc = 3\r\n                mathGame('a1_m4.png')\r\n            elif self.loc == 3:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                rectangle_group = pygame.sprite.Group()\r\n                background = Background('a1_m6.png', (900, 784))\r\n                all_sprites.add(background)\r\n                player = Player(450, 300, 1)\r\n                player.loc = 4\r\n                x = player.x\r\n                y = player.y\r\n\r\n                loc5 = 0\r\n                door = Door(20000, 20000, 1, 1)\r\n            elif self.loc == 5:\r\n                door.rect.x = 20000\r\n                self.loc = 6\r\n                end_screen(2, True)\r\n            elif self.loc == 6 or self.loc == 9:\r\n                a = ['Птица', \"Медведь\", \"Заяц\", \"Человек\"]\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m2.jpg', (2000, 1500))\r\n                all_sprites.add(background)\r\n                door = Door(1330, 750, 2, 1)\r\n                for j in range(1, 5):\r\n                    button_group.add(Button(575 + j * 150, 800, j))\r\n                player = Player(1270, 750, 2, key=player.key, pas=player.pas)\r\n                font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n                font = pygame.font.Font(font_path, 50)\r\n                ok_tip = random.randint(0, 3)\r\n                task_text = font.render(a[ok_tip], True, (255, 255, 255))\r\n                x, y = 700, 640\r\n                player.loc = 7\r\n            elif self.loc == 7:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m1.jpg', (3000, 1500))\r\n                pas = Pass(1300, 700)\r\n                door = Door(580, 840, 2, 1)\r\n                door2 = Door(1860, 540, 2, 1)\r\n                door3 = Door(580, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door)\r\n                door_group.add(door2)\r\n                door_group.add(door3)\r\n                pas = Pass(1300, 700)\r\n                player = Player(700, 840, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n        if pygame.sprite.collide_mask(self, door3):\r\n            if self.loc == 6 or self.loc == 9:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                word_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m3.jpg', (2000, 5500))\r\n                all_sprites.add(background)\r\n                chest = Chest(1000, 1100)\r\n                door3 = Door(1390, 3350, 2, 1)\r\n                player = Player(1340, 3350, 2, key=player.key, pas=player.pas)\r\n                x, y = 700, 640\r\n                player.loc = 8\r\n            elif self.loc == 8:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m1.jpg', (3000, 1500))\r\n                door = Door(580, 840, 2, 1)\r\n                door2 = Door(1860, 540, 2, 1)\r\n                door3 = Door(580, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door)\r\n                door_group.add(door2)\r\n                door_group.add(door3)\r\n                pas = Pass(1300, 700)\r\n                player = Player(700, 540, 2, key=player.key, pas=player.pas)\r\n                player.loc = 6\r\n        if pygame.sprite.collide_mask(self, chest) and self.loc != 9:\r\n            if player.key:\r\n                player.pas = True\r\n                img = load_image('cash.jpg')\r\n                img = pygame.transform.scale(img, (50, 50))\r\n                chest.image = pygame.transform.scale(load_image('chest_open.jpg'), (60, 40))\r\n\r\n        if pygame.sprite.collide_mask(self, pas) and self.loc != 9:\r\n            if player.pas:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a2_m4.jpg', (3000, 1500))\r\n                pas = Pass(1300, 700)\r\n                door = Door(580, 840, 2, 1)\r\n                door2 = Door(1860, 540, 2, 1)\r\n                door3 = Door(580, 540, 2, 1)\r\n                all_sprites.add(background)\r\n                door_group.add(door)\r\n                door_group.add(door2)\r\n                door_group.add(door3)\r\n                pas = Pass(1300, 700)\r\n                player = Player(player.x, player.y, 2)\r\n                player.loc = 9\r\n        if pygame.sprite.collide_mask(self, door2):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m4.png', (750, 400))\r\n            all_sprites.add(background)\r\n            player = Player(750, 1000, 1)\r\n            player.loc = 10\r\n            mathGame('a2_m5.jpg')\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\n# class Sign(pygame.sprite.Sprite):\r\n#     def __init__(self, x_pos, y_pos, ):\r\n#         super().__init__()\r\n\r\n\r\nclass Letters(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        a = random.choice(['letter_a.png', 'letter_b.png', 'letter_v.png',\r\n                           'letter_g.png', 'letter_d.png'])\r\n        image_path = load_image(a)\r\n        self.image = pygame.transform.scale(image_path, (40, 60))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n    def update(self):\r\n        self.rect.x -= 9\r\n        if pygame.sprite.collide_mask(self, player):\r\n            end_screen(1, False)\r\n            return\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n        self.mask = pygame.mask.from_threshold(self.image, (237, 28, 36),\r\n                                               (1, 1, 1, 255))\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, act, tip):\r\n        super().__init__(all_sprites)\r\n        if act == 1:\r\n            image_path = load_image(f'door_a1_{tip}.png')\r\n        elif act == 2:\r\n            image_path = load_image('exit-enter_a2.png')\r\n        if tip == 1:\r\n            self.image = pygame.transform.scale(image_path, (120, 96))\r\n        elif tip == 2:\r\n            self.image = pygame.transform.scale(image_path, (112, 67))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Rectangle(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, vx, vy, xx, yy, canDamage):\r\n        if canDamage:\r\n            image_path = load_image('redrect.jpg')\r\n        else:\r\n            image_path = load_image('warning rect.png')\r\n        image_path = pygame.transform.scale(image_path, (xx, yy))\r\n        sprite_image = image_path\r\n        super().__init__(rectangle_group, all_sprites)\r\n        self.image = sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.vx = vx\r\n        self.vy = vy\r\n        self.canDamage = canDamage\r\n\r\n    def update(self):\r\n        global rectangle_group\r\n        self.rect.x += 2 * self.vx\r\n        self.rect.y += 2 * self.vy\r\n        if self.canDamage:\r\n            if pygame.sprite.collide_mask(self, player):\r\n                for j in rectangle_group:\r\n                    j.rect.x = 10000\r\n\r\n                rectangle_group = pygame.sprite.Group()\r\n                end_screen(1, False)\r\n                return\r\n\r\n\r\nclass Button(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y, tip):\r\n        super().__init__(all_sprites)\r\n        image_path = load_image(f'button{tip}.jpg')\r\n        self.image = pygame.transform.scale(image_path, (80, 80))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.tip = tip\r\n        self.tm = 300\r\n\r\n    def update(self):\r\n        if pygame.sprite.spritecollideany(self, player_group):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 50)\r\n            screen.blit(font.render(str(self.tm // 100 + 1), True, (0, 0, 0)), (350, 0))\r\n            if self.tm // 100 + 1 == 0:\r\n                if self.tip == ok_tip + 1:\r\n                    self.tm += 1\r\n                    player.key = True\r\n                else:\r\n                    for j in button_group:\r\n                        j.rect.x = 20000\r\n                    end_screen(2, False)\r\n            self.tm -= 1\r\n        else:\r\n            self.tm = 300\r\n\r\n\r\nclass Pass(pygame.sprite.Sprite):\r\n    image = load_image('pass.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Pass.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass Chest(pygame.sprite.Sprite):\r\n    image = load_image('chest.jpg')\r\n    image = pygame.transform.scale(image, (60, 40))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Chest.image\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n\r\nclass WizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.png')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__()\r\n        self.image = WizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = WizardRus(2000, 2000)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nrectangle_group = pygame.sprite.Group()\r\nbutton_group = pygame.sprite.Group()\r\nword_group = pygame.sprite.Group()\r\n\r\ntime = datetime.datetime.now()\r\nx, y = 0, 0\r\nrect = Rectangle(20000, 20000, 0, 0, 10, 500, False)\r\nimg = load_image('key.jpg')\r\nimg = pygame.transform.scale(img, (50, 50))\r\n\r\nloc5 = 0\r\nloc11 = 0\r\nruni = -600\r\ncamera = Camera()\r\n\r\ndoor2 = Door(20000, 20000, 2, 1)\r\ndoor3 = Door(20000, 20000, 2, 1)\r\nchest = Chest(20000, 20000)\r\npas = Pass(20000, 20000)\r\n\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    i = 0\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_o:\r\n                    menu()\r\n                if event.key == pygame.K_e and runi == -600:\r\n                    player.run = 9\r\n                    runi = 300\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n\r\n        keys = pygame.key.get_pressed()\r\n\r\n        screen.fill((2, 0, 0))\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        if player.loc == 7:\r\n            screen.blit(task_text, (x - player.x + 500, y - player.y + 200))\r\n        if not player.key and pygame.sprite.collide_mask(player, chest):\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужен ключ!\", True, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        if not player.pas and pygame.sprite.collide_mask(player, pas) and player.loc == 6:\r\n            font_path = os.path.join(\"data/fonts\", \"comic.ttf\")\r\n            font = pygame.font.Font(font_path, 40)\r\n            task_text = font.render(\"Нужна монета!\", True, (255, 255, 255))\r\n            screen.blit(task_text, (300, 0))\r\n        player_group.draw(screen)\r\n        if runi > -600:\r\n            runi -= 1\r\n        if runi <= 0:\r\n            player.run = 5\r\n\r\n        if player.loc == 2:\r\n            i += 1\r\n            if i % 40 == 0:\r\n                letter = Letters(x - player.x + 2500,\r\n                                 random.randint(y - player.y + 450,\r\n                                                y - player.y + 660))\r\n                word_group.add(letter)\r\n            word_group.update()\r\n            word_group.draw(screen)\r\n        if player.key:\r\n            screen.blit(img, (750, 0))\r\n\r\n        if player.loc == 4:\r\n            if 200 <= loc5 <= 1000 and loc5 % 200 == 0:\r\n                try:\r\n                    n = random.randint(-1, 3) * 200\r\n                    while n == m:\r\n                        n = random.randint(-1, 3) * 200\r\n                    m = n\r\n                except:\r\n                    m = random.randint(-1, 3) * 200\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False)\r\n            if 340 <= loc5 <= 1000 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True)\r\n            if 1000 <= loc5 <= 3000 and loc5 % 100 == 0:\r\n                rect.rect.x = 20000\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-100, 150), -3, 0, 10,\r\n                          random.randint(50, 300), True)\r\n            if 3200 <= loc5 <= 4000 and loc5 % 200 == 0:\r\n                n = random.randint(-1, 3) * 200\r\n                while n == m:\r\n                    n = random.randint(-1, 3) * 200\r\n                m = n\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, False)\r\n            if 3200 <= loc5 <= 4140 and loc5 % 200 == 140:\r\n                rect.rect.x = 20000\r\n                rect = Rectangle(x - player.x + m,\r\n                                 y - player.y - 78, 0, 0, 450,\r\n                                 519, True)\r\n            if loc5 == 4200:\r\n                rect.rect.x = 20000\r\n            if loc5 == 4400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 1, 1)\r\n                player.loc = 5\r\n            loc5 += 1\r\n            rectangle_group.update()\r\n        if player.loc == 11:\r\n            if loc11 <= 2000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0, random.randint(100, 300),\r\n                          10, True)\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(200, 450), -3, 0, random.randint(100, 300),\r\n                          10, True)\r\n            if 2300 <= loc11 <= 4000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + random.randint(-200, 300),\r\n                          y - player.y - 200, 0, 1, 20, random.randint(100, 300),\r\n                          True)\r\n                Rectangle(x - player.x + random.randint(300, 800),\r\n                          y - player.y - 200, 0, 1, 20, random.randint(100, 300),\r\n                          True)\r\n            if 4300 <= loc11 <= 6000 and loc11 % 100 == 0:\r\n                Rectangle(x - player.x + 800,\r\n                          y - player.y + random.randint(-50, 200), -3, 0, random.randint(100, 300),\r\n                          10, True)\r\n                Rectangle(x - player.x - 300,\r\n                          y - player.y + random.randint(200, 450), 3, 0, random.randint(100, 300),\r\n                          10, True)\r\n            if loc11 == 6400:\r\n                door = Door(x - player.x + 350, y - player.y + 150, 2, 1)\r\n                player.loc = 12\r\n            loc11 += 1\r\n            rectangle_group.update()\r\n        button_group.update()\r\n        door_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ b/main.py	(date 1703510964330)
@@ -430,7 +430,6 @@
             image = load_image(f'm.c.front_walk_{self.step}.jpg')
         self.image = pygame.transform.scale(image, (40, 60))
         if pygame.sprite.collide_mask(self, door):
-            print(player.loc)
             if self.loc == 0:
                 all_sprites = pygame.sprite.Group()
                 player_group = pygame.sprite.Group()
@@ -547,7 +546,8 @@
                 player.pas = True
                 img = load_image('cash.jpg')
                 img = pygame.transform.scale(img, (50, 50))
-                chest.image = pygame.transform.scale(load_image('chest_open.jpg'), (60, 40))
+                chest.image = pygame.transform.scale(
+                    load_image('chest_open.jpg'), (60, 40))
 
         if pygame.sprite.collide_mask(self, pas) and self.loc != 9:
             if player.pas:
@@ -674,7 +674,8 @@
         if pygame.sprite.spritecollideany(self, player_group):
             font_path = os.path.join("data/fonts", "comic.ttf")
             font = pygame.font.Font(font_path, 50)
-            screen.blit(font.render(str(self.tm // 100 + 1), True, (0, 0, 0)), (350, 0))
+            screen.blit(font.render(str(self.tm // 100 + 1), True, (0, 0, 0)),
+                        (350, 0))
             if self.tm // 100 + 1 == 0:
                 if self.tip == ok_tip + 1:
                     self.tm += 1
@@ -818,7 +819,8 @@
             font = pygame.font.Font(font_path, 40)
             task_text = font.render("Нужен ключ!", True, (255, 255, 255))
             screen.blit(task_text, (300, 0))
-        if not player.pas and pygame.sprite.collide_mask(player, pas) and player.loc == 6:
+        if (not player.pas and pygame.sprite.collide_mask(player, pas) and
+                player.loc == 6):
             font_path = os.path.join("data/fonts", "comic.ttf")
             font = pygame.font.Font(font_path, 40)
             task_text = font.render("Нужна монета!", True, (255, 255, 255))
@@ -848,7 +850,7 @@
                     while n == m:
                         n = random.randint(-1, 3) * 200
                     m = n
-                except:
+                except Exception:
                     m = random.randint(-1, 3) * 200
                 rect.rect.x = 20000
                 rect = Rectangle(x - player.x + m,
@@ -888,24 +890,30 @@
         if player.loc == 11:
             if loc11 <= 2000 and loc11 % 100 == 0:
                 Rectangle(x - player.x + 800,
-                          y - player.y + random.randint(-50, 200), -3, 0, random.randint(100, 300),
+                          y - player.y + random.randint(-50, 200), -3, 0,
+                          random.randint(100, 300),
                           10, True)
                 Rectangle(x - player.x + 800,
-                          y - player.y + random.randint(200, 450), -3, 0, random.randint(100, 300),
+                          y - player.y + random.randint(200, 450), -3, 0,
+                          random.randint(100, 300),
                           10, True)
             if 2300 <= loc11 <= 4000 and loc11 % 100 == 0:
                 Rectangle(x - player.x + random.randint(-200, 300),
-                          y - player.y - 200, 0, 1, 20, random.randint(100, 300),
+                          y - player.y - 200, 0, 1, 20,
+                          random.randint(100, 300),
                           True)
                 Rectangle(x - player.x + random.randint(300, 800),
-                          y - player.y - 200, 0, 1, 20, random.randint(100, 300),
+                          y - player.y - 200, 0, 1, 20,
+                          random.randint(100, 300),
                           True)
             if 4300 <= loc11 <= 6000 and loc11 % 100 == 0:
                 Rectangle(x - player.x + 800,
-                          y - player.y + random.randint(-50, 200), -3, 0, random.randint(100, 300),
+                          y - player.y + random.randint(-50, 200), -3, 0,
+                          random.randint(100, 300),
                           10, True)
                 Rectangle(x - player.x - 300,
-                          y - player.y + random.randint(200, 450), 3, 0, random.randint(100, 300),
+                          y - player.y + random.randint(200, 450), 3, 0,
+                          random.randint(100, 300),
                           10, True)
             if loc11 == 6400:
                 door = Door(x - player.x + 350, y - player.y + 150, 2, 1)
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,52 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"описание Entangled Tale.txt\">\r\n      <change afterPath=\"$PROJECT_DIR$/data/main character.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"описание Entangled Tale.txt\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 6f9f231fee1ed62d23defa6199afe92523e3ddfb)
-+++ b/.idea/workspace.xml	(date 1702731415910)
-@@ -4,9 +4,8 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="описание Entangled Tale.txt">
--      <change afterPath="$PROJECT_DIR$/data/main character.png" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="second version(not works)">
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -114,7 +113,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702664023442</updated>
-     </task>
--    <option name="localTasksCounter" value="3" />
-+    <task id="LOCAL-00003" summary="second version(not works)">
-+      <option name="closed" value="true" />
-+      <created>1702728306702</created>
-+      <option name="number" value="00003" />
-+      <option name="presentableId" value="LOCAL-00003" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702728306702</updated>
-+    </task>
-+    <option name="localTasksCounter" value="4" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -129,8 +136,9 @@
-     </option>
-   </component>
-   <component name="VcsManagerConfiguration">
--    <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
--    <option name="LAST_COMMIT_MESSAGE" value="описание Entangled Tale.txt" />
-+    <MESSAGE value="start" />
-+    <MESSAGE value="second version(not works)" />
-+    <option name="LAST_COMMIT_MESSAGE" value="second version(not works)" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]" date="1702823800924" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17.12.2023 17:36 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="data/act3.png" />
-    <option name="AFTER_PATH" value="data/act3.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act3.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/Menu.png" />
-    <option name="AFTER_PATH" value="data/Menu.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/Menu.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act4.png" />
-    <option name="AFTER_PATH" value="data/act4.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act4.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/wizard.png" />
-    <option name="AFTER_PATH" value="data/wizard.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/wizard.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act1.png" />
-    <option name="AFTER_PATH" value="data/act1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/exit-enter_a1.png" />
-    <option name="AFTER_PATH" value="data/exit-enter_a1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/exit-enter_a1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/blackfon.png" />
-    <option name="AFTER_PATH" value="data/blackfon.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/blackfon.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act2.png" />
-    <option name="AFTER_PATH" value="data/act2.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act2.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]" date="1702759013865" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16.12.2023 23:36 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]" date="1702823520065" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17.12.2023 17:31 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="data/act3.png" />
-    <option name="AFTER_PATH" value="data/act3.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act3.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/Menu.png" />
-    <option name="AFTER_PATH" value="data/Menu.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/Menu.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act4.png" />
-    <option name="AFTER_PATH" value="data/act4.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act4.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/wizard.png" />
-    <option name="AFTER_PATH" value="data/wizard.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/wizard.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act1.png" />
-    <option name="AFTER_PATH" value="data/act1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/exit-enter_a1.png" />
-    <option name="AFTER_PATH" value="data/exit-enter_a1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/exit-enter_a1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/blackfon.png" />
-    <option name="AFTER_PATH" value="data/blackfon.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/blackfon.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act2.png" />
-    <option name="AFTER_PATH" value="data/act2.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act2.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,619 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import os\r\nimport random\r\n\r\nimport pygame\r\nimport sys\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.direction == 'left':\r\n            image = load_image(f'm.c.left_stop.jpg')\r\n        elif self.direction == 'right':\r\n            image = load_image(f'm.c.right_stop.jpg')\r\n        elif self.direction == 'down':\r\n            image = load_image(f'm.c.front_stop.jpg')\r\n        elif self.direction == 'up':\r\n            image = load_image(f'm.c.back_stop.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n\r\nclass PlayerAct1(Player):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(pos_x, pos_y)\r\n        self.loc = 0\r\n\r\n    def update(self, move_up, move_down, move_left, move_right):\r\n        global all_sprites, background, player, player_group, door_group, door\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= 6\r\n            self.x -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x += 6\r\n                self.x += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.left_walk_{self.step}.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += 6\r\n            self.x += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x -= 6\r\n                self.x -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.right_walk_{self.step}.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= 6\r\n            self.y -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y += 6\r\n                self.y += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.back_walk_{self.step}.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += 6\r\n            self.y += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y -= 6\r\n                self.y -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.front_walk_{self.step}.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m2.jpg', (600, 1300))\r\n                all_sprites.add(background)\r\n                player = PlayerAct1(285, 950)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 285\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(260, 300)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m3.jpg', (1300, 600))\r\n                all_sprites.add(background)\r\n                door = Door(80, 60)\r\n                player = PlayerAct1(650, 300)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a1_m4.jpg', (700, 500))\r\n                all_sprites.add(background)\r\n                player = PlayerAct1(375, 300)\r\n                player.loc = 3\r\n                mathGame()\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\ndef newDialog():\r\n    font = pygame.font.Font(None, 30)\r\n    t1 = font.render('', True, (255, 255, 255))\r\n    t2 = font.render('', True, (255, 255, 255))\r\n    t3 = font.render('', True, (255, 255, 255))\r\n    return t1, t2, t3\r\n\r\n\r\ndef mathGame():\r\n    global background, all_sprites, player_group, player, door, door_group\r\n    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    n1 = random.randint(0, 100)\r\n    n3 = random.randint(0, 9)\r\n    n2 = n3 - n1\r\n    m = 'Я великий маг этого подземелья,'\r\n    m2 = 'и я никому не дам ходить по нему'\r\n    m3 = 'без моего разрешения!'\r\n    screen.fill((0, 0, 0))\r\n    screen.blit(fon, (0, 0))\r\n    font = pygame.font.Font(None, 30)\r\n    t1, t2, t3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    a = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_z and a == 0:\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    if n2 < 0:\r\n                        m1 = f\"{n1}{n2}\"\r\n                    else:\r\n                        m1 = f\"{n1}+{n2}\"\r\n                    m = 'Но ты можешь попытать удачу,'\r\n                    m2 = 'и решить мою задачу'\r\n                    m3 = 'сколько будет:' + m1\r\n                    t1, t2, t3 = newDialog()\r\n                    i = 1\r\n                    a = 1\r\n                elif 48 <= event.key <= 58 and a == 1:\r\n                    m = event.key - 48\r\n                    t1, t2, t3 = newDialog()\r\n                    if m == n3:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        m = 'Я вижу, что ты силен в математике'\r\n                        m2 = 'на этот раз я тебя пропукаю,'\r\n                        m3 = 'но мы еще встретимся!'\r\n                        win = True\r\n                    else:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        m = 'Я вижу, что ты слаб,'\r\n                        m2 = 'возвращайся,'\r\n                        m3 = 'лишь когда будешь достоен'\r\n                    i = 1\r\n                    a = 2\r\n                elif event.key == pygame.K_z and a == 2:\r\n                    if win:\r\n                        all_sprites = pygame.sprite.Group()\r\n                        player_group = pygame.sprite.Group()\r\n                        background = Background('a1_m5.jpg', (1200, 700))\r\n                        all_sprites.add(background)\r\n                        player = PlayerAct1(600, 450)\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        act1()\r\n                        return\r\n\r\n        if i <= len(m):\r\n            t1 = font.render(m[:i], True, (255, 255, 255))\r\n        elif i <= len(m) + len(m2):\r\n            t2 = font.render(m2[:i - len(m)], True, (255, 255, 255))\r\n        elif i <= len(m) + len(m2) + len(m3):\r\n            t3 = font.render(m3[:i - len(m) - len(m2)], True, (255, 255, 255))\r\n        i += 1\r\n        screen.blit(t1, (230, 85))\r\n        screen.blit(t2, (230, 115))\r\n        screen.blit(t3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):\r\n    image_path = load_image('exit-enter_a1.png')\r\n    image_path = pygame.transform.scale(image_path, (450, 450))\r\n    sprite_image = image_path\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Door.sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x - 125, pos_y - 125)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nplayer = Player(400, 100)\r\n\r\n\r\nclass wizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.jpg')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = wizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = wizardRus(2000, 2000)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background, door, door_group\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.jpg', (1360, 520))\r\n    door = Door(1200, 200)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    player = PlayerAct1(400, 100)\r\n\r\n\r\ndef act2():\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef act3():\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef menu():\r\n    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_1:\r\n                    act1()\r\n                    return\r\n                if event.key == pygame.K_2:\r\n                    act2()\r\n                    return\r\n                if event.key == pygame.K_3:\r\n                    act3()\r\n                    return\r\n                if event.key == pygame.K_p:\r\n                    return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\ncamera = Camera()\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_o:\r\n                    menu()\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n        keys = pygame.key.get_pressed()\r\n\r\n        screen.fill((0, 0, 0))\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        player_group.draw(screen)\r\n        door_group.draw(screen)\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision 6357436339f086eba54d0ff6bb39dfbf0bbb83cf)
-+++ b/main.py	(date 1702823182436)
-@@ -322,13 +322,13 @@
- 
- class Door(pygame.sprite.Sprite):
-     image_path = load_image('exit-enter_a1.png')
--    image_path = pygame.transform.scale(image_path, (450, 450))
-+    image_path = pygame.transform.scale(image_path, (120, 96))
-     sprite_image = image_path
- 
-     def __init__(self, pos_x, pos_y):
-         super().__init__(all_sprites)
-         self.image = Door.sprite_image
--        self.rect = self.image.get_rect().move(pos_x - 125, pos_y - 125)
-+        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)
-         self.mask = pygame.mask.from_surface(self.image)
- 
- 
-@@ -373,7 +373,7 @@
-     all_sprites = pygame.sprite.Group()
-     player_group = pygame.sprite.Group()
-     door_group = pygame.sprite.Group()
--    background = Background('a1_m1.jpg', (1360, 520))
-+    background = Background('a1_m1(1).png', (1360, 760))
-     door = Door(1200, 200)
-     all_sprites.add(background)
-     door_group.add(door)
-Index: test.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/test.py b/test.py
-new file mode 100644
---- /dev/null	(date 1702823216738)
-+++ b/test.py	(date 1702823216738)
-@@ -0,0 +1,473 @@
-+import os
-+import random
-+
-+import pygame
-+import sys
-+
-+
-+def load_image(name, colorkey=None):
-+    fullname = os.path.join('data', name)
-+    # если файл не существует, то выходим
-+    if not os.path.isfile(fullname):
-+        print(f"Файл с изображением '{fullname}' не найден")
-+        sys.exit()
-+    image = pygame.image.load(fullname)
-+    if colorkey is not None:
-+        if colorkey == -1:
-+            colorkey = image.get_at((0, 0))
-+        image.set_colorkey(colorkey)
-+    return image
-+
-+
-+class Player(pygame.sprite.Sprite):
-+    image = load_image('m.c.front_stop.jpg')
-+    image = pygame.transform.scale(image, (40, 60))
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(player_group, all_sprites)
-+        self.image = Player.image
-+        self.rect = self.image.get_rect().move(
-+            pos_x, pos_y)
-+        self.x = pos_x + 20
-+        self.y = pos_y + 60
-+        self.step = 1
-+        self.back = False
-+        self.last_skin_change_time = 0
-+        self.direction = ''
-+        self.mask = pygame.mask.from_surface(self.image)
-+
-+    def stop(self):
-+        image = self.image
-+        if self.direction == 'left':
-+            image = load_image(f'm.c.left_stop.jpg')
-+        elif self.direction == 'right':
-+            image = load_image(f'm.c.right_stop.jpg')
-+        elif self.direction == 'down':
-+            image = load_image(f'm.c.front_stop.jpg')
-+        elif self.direction == 'up':
-+            image = load_image(f'm.c.back_stop.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+
-+
-+class PlayerAct1(Player):
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(pos_x, pos_y)
-+        self.loc = 0
-+
-+    def update(self, move_up, move_down, move_left, move_right):
-+        global all_sprites, background, player, player_group, door_group, door
-+        image = self.image
-+        current_time = pygame.time.get_ticks()
-+        if move_left:
-+            self.direction = 'left'
-+            self.rect.x -= 6
-+            self.x -= 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.x += 6
-+                self.x += 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.left_walk_{self.step}.jpg')
-+        if move_right:
-+            self.direction = 'right'
-+            self.rect.x += 6
-+            self.x += 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.x -= 6
-+                self.x -= 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.right_walk_{self.step}.jpg')
-+        if move_up:
-+            self.direction = 'up'
-+            self.rect.y -= 6
-+            self.y -= 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.y += 6
-+                self.y += 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.back_walk_{self.step}.jpg')
-+        if move_down:
-+            self.direction = 'down'
-+            self.rect.y += 6
-+            self.y += 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.y -= 6
-+                self.y -= 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.front_walk_{self.step}.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+        if pygame.sprite.collide_mask(self, door):
-+            if self.loc == 0:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                door_group = pygame.sprite.Group()
-+                background = Background('a1_m2.jpg', (600, 1300))
-+                all_sprites.add(background)
-+                player = PlayerAct1(285, 950)
-+                player.loc = 1
-+                wizardRus.rect.x = 285
-+                wizardRus.rect.y = 600
-+                wizardRus.canRun = False
-+                wizardRus.y = 600
-+                all_sprites.add(wizardRus)
-+                door = Door(260, 300)
-+            elif self.loc == 1:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                door_group = pygame.sprite.Group()
-+                background = Background('a1_m3.jpg', (1300, 600))
-+                all_sprites.add(background)
-+                door = Door(80, 60)
-+                player = PlayerAct1(650, 300)
-+                player.loc = 2
-+            elif self.loc == 2:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                background = Background('a1_m4.jpg', (700, 500))
-+                all_sprites.add(background)
-+                player = PlayerAct1(375, 300)
-+                player.loc = 3
-+                mathGame()
-+
-+        camera.update(player)
-+        for sprite in all_sprites:
-+            camera.apply(sprite)
-+
-+
-+def newDialog():
-+    font = pygame.font.Font(None, 30)
-+    t1 = font.render('', True, (255, 255, 255))
-+    t2 = font.render('', True, (255, 255, 255))
-+    t3 = font.render('', True, (255, 255, 255))
-+    return t1, t2, t3
-+
-+
-+def mathGame():
-+    global background, all_sprites, player_group, player, door, door_group
-+    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+
-+    n1 = random.randint(0, 100)
-+    n3 = random.randint(0, 9)
-+    n2 = n3 - n1
-+    m = 'Я великий маг этого подземелья,'
-+    m2 = 'и я никому не дам ходить по нему'
-+    m3 = 'без моего разрешения!'
-+    screen.fill((0, 0, 0))
-+    screen.blit(fon, (0, 0))
-+    font = pygame.font.Font(None, 30)
-+    t1, t2, t3 = newDialog()
-+
-+    win = False
-+    i = 1
-+    a = 0
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_z and a == 0:
-+                    screen.fill((0, 0, 0))
-+                    screen.blit(fon, (0, 0))
-+                    if n2 < 0:
-+                        m1 = f"{n1}{n2}"
-+                    else:
-+                        m1 = f"{n1}+{n2}"
-+                    m = 'Но ты можешь попытать удачу,'
-+                    m2 = 'и решить мою задачу'
-+                    m3 = 'сколько будет:' + m1
-+                    t1, t2, t3 = newDialog()
-+                    i = 1
-+                    a = 1
-+                elif 48 <= event.key <= 58 and a == 1:
-+                    m = event.key - 48
-+                    t1, t2, t3 = newDialog()
-+                    if m == n3:
-+                        screen.fill((0, 0, 0))
-+                        screen.blit(fon, (0, 0))
-+                        m = 'Я вижу, что ты силен в математике'
-+                        m2 = 'на этот раз я тебя пропукаю,'
-+                        m3 = 'но мы еще встретимся!'
-+                        win = True
-+                    else:
-+                        screen.fill((0, 0, 0))
-+                        screen.blit(fon, (0, 0))
-+                        m = 'Я вижу, что ты слаб,'
-+                        m2 = 'возвращайся,'
-+                        m3 = 'лишь когда будешь достоен'
-+                    i = 1
-+                    a = 2
-+                elif event.key == pygame.K_z and a == 2:
-+                    if win:
-+                        all_sprites = pygame.sprite.Group()
-+                        player_group = pygame.sprite.Group()
-+                        background = Background('a1_m5.jpg', (1200, 700))
-+                        all_sprites.add(background)
-+                        player = PlayerAct1(600, 450)
-+                        camera.update(player)
-+                        for sprite in all_sprites:
-+                            camera.apply(sprite)
-+                        return
-+                    else:
-+                        act1()
-+                        return
-+
-+        if i <= len(m):
-+            t1 = font.render(m[:i], True, (255, 255, 255))
-+        elif i <= len(m) + len(m2):
-+            t2 = font.render(m2[:i - len(m)], True, (255, 255, 255))
-+        elif i <= len(m) + len(m2) + len(m3):
-+            t3 = font.render(m3[:i - len(m) - len(m2)], True, (255, 255, 255))
-+        i += 1
-+        screen.blit(t1, (230, 85))
-+        screen.blit(t2, (230, 115))
-+        screen.blit(t3, (230, 145))
-+        player_group.draw(screen)
-+        pygame.display.flip()
-+        clock.tick(20)
-+        clock.tick(FPS)
-+
-+
-+class Background(pygame.sprite.Sprite):
-+    def __init__(self, image_path, size):
-+        super().__init__()
-+        self.image = load_image(image_path)
-+        self.image = pygame.transform.scale(self.image, size)
-+        self.rect = self.image.get_rect()
-+
-+    def get_rgb(self, x, y):
-+        pixel = pygame.PixelArray(self.image)
-+        return self.image.unmap_rgb(pixel[x][y])
-+
-+
-+clock = pygame.time.Clock()
-+FPS = 60
-+
-+
-+def terminate():
-+    pygame.quit()
-+    sys.exit()
-+
-+
-+def start_screen():
-+    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(0.7)
-+    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif (event.type == pygame.KEYDOWN or event.type ==
-+                  pygame.MOUSEBUTTONDOWN):
-+                if True:
-+                    act1()
-+                    return
-+        clock.tick(FPS)
-+
-+
-+class Door(pygame.sprite.Sprite):
-+    image_path = load_image('exit-enter_a1.png')
-+    image_path = pygame.transform.scale(image_path, (120, 96))
-+    sprite_image = image_path
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(all_sprites)
-+        self.image = Door.sprite_image
-+        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)
-+        self.mask = pygame.mask.from_surface(self.image)
-+
-+
-+# группы спрайтов
-+all_sprites = pygame.sprite.Group()
-+player_group = pygame.sprite.Group()
-+door_group = pygame.sprite.Group()
-+player = Player(400, 100)
-+
-+
-+class wizardRus(pygame.sprite.Sprite):
-+    image = load_image('wizardRus.jpg')
-+    image = pygame.transform.scale(image, (80, 90))
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(all_sprites)
-+        self.image = wizardRus.image
-+        self.rect = self.image.get_rect().move(
-+            pos_x, pos_y)
-+        self.canRun = False
-+        self.y = pos_y
-+
-+    def update(self):
-+        if self.canRun:
-+            self.rect.y -= 10
-+            self.y -= 10
-+            if self.y <= 300:
-+                self.rect.y = -1000
-+        if player.y <= 800:
-+            self.canRun = True
-+
-+
-+wizardRus = wizardRus(2000, 2000)
-+
-+
-+def act1():
-+    global all_sprites, player_group, player, background, door, door_group
-+    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+    all_sprites = pygame.sprite.Group()
-+    player_group = pygame.sprite.Group()
-+    door_group = pygame.sprite.Group()
-+    background = Background('a1_m1(1).png', (1360, 760))
-+    door = Door(1200, 200)
-+    all_sprites.add(background)
-+    door_group.add(door)
-+    player = PlayerAct1(400, 100)
-+
-+
-+def act2():
-+    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+
-+
-+def act3():
-+    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+
-+
-+def menu():
-+    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_1:
-+                    act1()
-+                    return
-+                if event.key == pygame.K_2:
-+                    act2()
-+                    return
-+                if event.key == pygame.K_3:
-+                    act3()
-+                    return
-+                if event.key == pygame.K_p:
-+                    return
-+
-+        clock.tick(FPS)
-+
-+
-+class Camera:
-+    # зададим начальный сдвиг камеры
-+    def __init__(self):
-+        self.dx = 0
-+        self.dy = 0
-+
-+    def apply(self, obj):
-+        obj.rect.x += self.dx
-+        obj.rect.y += self.dy
-+
-+    # позиционировать камеру на объекте target
-+    def update(self, target):
-+        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)
-+        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)
-+
-+
-+camera = Camera()
-+if __name__ == '__main__':
-+    pygame.init()
-+    pygame.display.set_caption('Entangled Tale')
-+    size = width, height = 800, 500
-+    screen = pygame.display.set_mode(size)
-+    start_screen()
-+
-+    running = True
-+    while running:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                running = False
-+            if event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_o:
-+                    menu()
-+            if event.type == pygame.KEYUP:
-+                player.stop()
-+        keys = pygame.key.get_pressed()
-+
-+        screen.fill((0, 0, 0))
-+        # Обновление игровых объектов
-+        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],
-+                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])
-+        player.update(keys[pygame.K_w], keys[pygame.K_s],
-+                      keys[pygame.K_a], keys[pygame.K_d])
-+        # обновляем положение всех спрайтов
-+        for sprite in all_sprites:
-+            camera.apply(sprite)
-+        camera.update(player)
-+        wizardRus.update()
-+        all_sprites.draw(screen)
-+        player_group.draw(screen)
-+        door_group.draw(screen)
-+
-+        pygame.display.flip()
-+        clock.tick(FPS)
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"сюжет акта 1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"сюжет акта 1\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 6357436339f086eba54d0ff6bb39dfbf0bbb83cf)
-+++ b/.idea/workspace.xml	(date 1702820523461)
-@@ -4,8 +4,17 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1">
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="exit-enter_a1">
-+      <change afterPath="$PROJECT_DIR$/test.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/Menu.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/Menu.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act2.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act2.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act3.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act3.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act4.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act4.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/blackfon.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/blackfon.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/exit-enter_a1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/exit-enter_a1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/wizard.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/wizard.png" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -23,7 +32,7 @@
-   <component name="Git.Settings">
-     <option name="RECENT_BRANCH_BY_REPOSITORY">
-       <map>
--        <entry key="$PROJECT_DIR$" value="master" />
-+        <entry key="$PROJECT_DIR$" value="4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba" />
-       </map>
-     </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -41,7 +50,9 @@
-   &quot;keyToString&quot;: {
-     &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-     &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-+    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,
-     &quot;Python.main.executor&quot;: &quot;Run&quot;,
-+    &quot;Python.test.executor&quot;: &quot;Run&quot;,
-     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-@@ -85,7 +96,7 @@
-   <component name="SharedIndexes">
-     <attachedChunks>
-       <set>
--        <option value="bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259" />
-+        <option value="bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298" />
-       </set>
-     </attachedChunks>
-   </component>
-@@ -122,7 +133,31 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702747008794</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759253894</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759253894</updated>
-+    </task>
-+    <task id="LOCAL-00005" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759279832</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759279832</updated>
-+    </task>
-+    <task id="LOCAL-00006" summary="exit-enter_a1">
-+      <option name="closed" value="true" />
-+      <created>1702812381417</created>
-+      <option name="number" value="00006" />
-+      <option name="presentableId" value="LOCAL-00006" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702812381417</updated>
-+    </task>
-+    <option name="localTasksCounter" value="7" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -140,6 +175,8 @@
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
-     <MESSAGE value="сюжет акта 1" />
--    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-+    <MESSAGE value="animations main character" />
-+    <MESSAGE value="exit-enter_a1" />
-+    <option name="LAST_COMMIT_MESSAGE" value="exit-enter_a1" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]" date="1702823221049" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17.12.2023 17:26 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="data/act3.png" />
-    <option name="AFTER_PATH" value="data/act3.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act3.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/Menu.png" />
-    <option name="AFTER_PATH" value="data/Menu.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/Menu.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act4.png" />
-    <option name="AFTER_PATH" value="data/act4.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act4.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/wizard.png" />
-    <option name="AFTER_PATH" value="data/wizard.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/wizard.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act1.png" />
-    <option name="AFTER_PATH" value="data/act1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/exit-enter_a1.png" />
-    <option name="AFTER_PATH" value="data/exit-enter_a1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/exit-enter_a1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/blackfon.png" />
-    <option name="AFTER_PATH" value="data/blackfon.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/blackfon.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act2.png" />
-    <option name="AFTER_PATH" value="data/act2.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act2.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,48 +0,0 @@
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"описание Entangled Tale.txt\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"описание Entangled Tale.txt\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 3a4fbc7e7e4aa3ca34832da236d8e59b157a0db1)
-+++ b/.idea/workspace.xml	(date 1702747016525)
-@@ -4,9 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="описание Entangled Tale.txt">
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--    </list>
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1" />
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-@@ -113,7 +111,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702664023442</updated>
-     </task>
--    <option name="localTasksCounter" value="3" />
-+    <task id="LOCAL-00003" summary="сюжет акта 1">
-+      <option name="closed" value="true" />
-+      <created>1702747008794</created>
-+      <option name="number" value="00003" />
-+      <option name="presentableId" value="LOCAL-00003" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702747008794</updated>
-+    </task>
-+    <option name="localTasksCounter" value="4" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -130,6 +136,7 @@
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
--    <option name="LAST_COMMIT_MESSAGE" value="описание Entangled Tale.txt" />
-+    <MESSAGE value="сюжет акта 1" />
-+    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,610 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import os\r\nimport random\r\n\r\nimport pygame\r\nimport sys\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.loc = 0\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.direction == 'left':\r\n            image = load_image(f'm.c.left_stop.jpg')\r\n        elif self.direction == 'right':\r\n            image = load_image(f'm.c.right_stop.jpg')\r\n        elif self.direction == 'down':\r\n            image = load_image(f'm.c.front_stop.jpg')\r\n        elif self.direction == 'up':\r\n            image = load_image(f'm.c.back_stop.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n\r\nclass PlayerAct1(Player):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(pos_x, pos_y)\r\n\r\n    def update(self, move_up, move_down, move_left, move_right):\r\n        global all_sprites, background, player, player_group, door_group, door, slova_group\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= 6\r\n            self.x -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x += 6\r\n                self.x += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.left_walk_{self.step}.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += 6\r\n            self.x += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x -= 6\r\n                self.x -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.right_walk_{self.step}.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= 6\r\n            self.y -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y += 6\r\n                self.y += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.back_walk_{self.step}.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += 6\r\n            self.y += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y -= 6\r\n                self.y -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.front_walk_{self.step}.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m2.jpg', (600, 1300))\r\n                all_sprites.add(background)\r\n                player = PlayerAct1(285, 950)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 285\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(260, 300)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                slova_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m3.jpg', (2100, 500))\r\n                all_sprites.add(background)\r\n                door = Door(1900, 200)\r\n                player = PlayerAct1(450, 200)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a1_m4.jpg', (700, 500))\r\n                all_sprites.add(background)\r\n                player = PlayerAct1(375, 300)\r\n                player.loc = 3\r\n                mathGame()\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\nclass Slova(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        a = random.choice(['sl1.jpg', 'sl2.jpg', 'sl3.jpg', 'sl4.jpg', 'sl5.jpg'])\r\n        image_path = load_image(a)\r\n        self.image = pygame.transform.scale(image_path, (40, 60))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n    def update(self):\r\n        self.rect.x -= 8\r\n        if pygame.sprite.collide_mask(self, player):\r\n            act1()\r\n            return\r\n\r\n\r\ndef newDialog():\r\n    font = pygame.font.Font(None, 30)\r\n    t1 = font.render('', True, (255, 255, 255))\r\n    t2 = font.render('', True, (255, 255, 255))\r\n    t3 = font.render('', True, (255, 255, 255))\r\n    return t1, t2, t3\r\n\r\n\r\ndef mathGame():\r\n    global background, all_sprites, player_group, player, door, door_group\r\n    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    n1 = random.randint(0, 100)\r\n    n3 = random.randint(0, 9)\r\n    n2 = n3 - n1\r\n    m = 'Я великий маг этого подземелья,'\r\n    m2 = 'и я никому не дам ходить по нему'\r\n    m3 = 'без моего разрешения!'\r\n    screen.fill((0, 0, 0))\r\n    screen.blit(fon, (0, 0))\r\n    font = pygame.font.Font(None, 30)\r\n    t1, t2, t3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    a = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_z and a == 0:\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    if n2 < 0:\r\n                        m1 = f\"{n1}{n2}\"\r\n                    else:\r\n                        m1 = f\"{n1}+{n2}\"\r\n                    m = 'Но ты можешь попытать удачу,'\r\n                    m2 = 'и решить мою задачу'\r\n                    m3 = 'сколько будет:' + m1\r\n                    t1, t2, t3 = newDialog()\r\n                    i = 1\r\n                    a = 1\r\n                elif 48 <= event.key <= 58 and a == 1:\r\n                    m = event.key - 48\r\n                    t1, t2, t3 = newDialog()\r\n                    if m == n3:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        m = 'Я вижу, что ты силен в математике'\r\n                        m2 = 'на этот раз я тебя пропукаю,'\r\n                        m3 = 'но мы еще встретимся!'\r\n                        win = True\r\n                    else:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        m = 'Я вижу, что ты слаб,'\r\n                        m2 = 'возвращайся,'\r\n                        m3 = 'лишь когда будешь достоен'\r\n                    i = 1\r\n                    a = 2\r\n                elif event.key == pygame.K_z and a == 2:\r\n                    if win:\r\n                        all_sprites = pygame.sprite.Group()\r\n                        player_group = pygame.sprite.Group()\r\n                        background = Background('a1_m5.jpg', (1200, 700))\r\n                        all_sprites.add(background)\r\n                        player = PlayerAct1(600, 450)\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        act1()\r\n                        return\r\n\r\n        if i <= len(m):\r\n            t1 = font.render(m[:i], True, (255, 255, 255))\r\n        elif i <= len(m) + len(m2):\r\n            t2 = font.render(m2[:i - len(m)], True, (255, 255, 255))\r\n        elif i <= len(m) + len(m2) + len(m3):\r\n            t3 = font.render(m3[:i - len(m) - len(m2)], True, (255, 255, 255))\r\n        i += 1\r\n        screen.blit(t1, (230, 85))\r\n        screen.blit(t2, (230, 115))\r\n        screen.blit(t3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):\r\n    image_path = load_image('exit-enter_a1.png')\r\n    image_path = pygame.transform.scale(image_path, (450, 450))\r\n    sprite_image = image_path\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Door.sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x - 125, pos_y - 125)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nplayer = Player(400, 100)\r\n\r\n\r\nclass wizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.jpg')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = wizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = wizardRus(2000, 2000)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background, door, door_group\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.jpg', (1360, 520))\r\n    door = Door(1200, 200)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    player = PlayerAct1(400, 100)\r\n\r\n\r\ndef act2():\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef act3():\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef menu():\r\n    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_1:\r\n                    act1()\r\n                    return\r\n                if event.key == pygame.K_2:\r\n                    act2()\r\n                    return\r\n                if event.key == pygame.K_3:\r\n                    act3()\r\n                    return\r\n                if event.key == pygame.K_p:\r\n                    return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\ncamera = Camera()\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    i = 0\r\n\r\n    slova_group = pygame.sprite.Group()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_o:\r\n                    menu()\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n        keys = pygame.key.get_pressed()\r\n\r\n        screen.fill((0, 0, 0))\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        player_group.draw(screen)\r\n        if player.loc == 2:\r\n            i += 1\r\n            if i % 25 == 0:\r\n                slovo = Slova(1500, random.randint(200, 300))\r\n                slova_group.add(slovo)\r\n            slova_group.update()\r\n            slova_group.draw(screen)\r\n        door_group.draw(screen)\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision 92d448efd4804c1b7ba182f34bf72ed39b82efaa)
-+++ b/main.py	(date 1702823519756)
-@@ -338,13 +338,13 @@
- 
- class Door(pygame.sprite.Sprite):
-     image_path = load_image('exit-enter_a1.png')
--    image_path = pygame.transform.scale(image_path, (450, 450))
-+    image_path = pygame.transform.scale(image_path, (120, 96))
-     sprite_image = image_path
- 
-     def __init__(self, pos_x, pos_y):
-         super().__init__(all_sprites)
-         self.image = Door.sprite_image
--        self.rect = self.image.get_rect().move(pos_x - 125, pos_y - 125)
-+        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)
-         self.mask = pygame.mask.from_surface(self.image)
- 
- 
-Index: test.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/test.py b/test.py
-new file mode 100644
---- /dev/null	(date 1702823519760)
-+++ b/test.py	(date 1702823519760)
-@@ -0,0 +1,473 @@
-+import os
-+import random
-+
-+import pygame
-+import sys
-+
-+
-+def load_image(name, colorkey=None):
-+    fullname = os.path.join('data', name)
-+    # если файл не существует, то выходим
-+    if not os.path.isfile(fullname):
-+        print(f"Файл с изображением '{fullname}' не найден")
-+        sys.exit()
-+    image = pygame.image.load(fullname)
-+    if colorkey is not None:
-+        if colorkey == -1:
-+            colorkey = image.get_at((0, 0))
-+        image.set_colorkey(colorkey)
-+    return image
-+
-+
-+class Player(pygame.sprite.Sprite):
-+    image = load_image('m.c.front_stop.jpg')
-+    image = pygame.transform.scale(image, (40, 60))
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(player_group, all_sprites)
-+        self.image = Player.image
-+        self.rect = self.image.get_rect().move(
-+            pos_x, pos_y)
-+        self.x = pos_x + 20
-+        self.y = pos_y + 60
-+        self.step = 1
-+        self.back = False
-+        self.last_skin_change_time = 0
-+        self.direction = ''
-+        self.mask = pygame.mask.from_surface(self.image)
-+
-+    def stop(self):
-+        image = self.image
-+        if self.direction == 'left':
-+            image = load_image(f'm.c.left_stop.jpg')
-+        elif self.direction == 'right':
-+            image = load_image(f'm.c.right_stop.jpg')
-+        elif self.direction == 'down':
-+            image = load_image(f'm.c.front_stop.jpg')
-+        elif self.direction == 'up':
-+            image = load_image(f'm.c.back_stop.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+
-+
-+class PlayerAct1(Player):
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(pos_x, pos_y)
-+        self.loc = 0
-+
-+    def update(self, move_up, move_down, move_left, move_right):
-+        global all_sprites, background, player, player_group, door_group, door
-+        image = self.image
-+        current_time = pygame.time.get_ticks()
-+        if move_left:
-+            self.direction = 'left'
-+            self.rect.x -= 6
-+            self.x -= 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.x += 6
-+                self.x += 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.left_walk_{self.step}.jpg')
-+        if move_right:
-+            self.direction = 'right'
-+            self.rect.x += 6
-+            self.x += 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.x -= 6
-+                self.x -= 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.right_walk_{self.step}.jpg')
-+        if move_up:
-+            self.direction = 'up'
-+            self.rect.y -= 6
-+            self.y -= 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.y += 6
-+                self.y += 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.back_walk_{self.step}.jpg')
-+        if move_down:
-+            self.direction = 'down'
-+            self.rect.y += 6
-+            self.y += 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.y -= 6
-+                self.y -= 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.front_walk_{self.step}.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+        if pygame.sprite.collide_mask(self, door):
-+            if self.loc == 0:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                door_group = pygame.sprite.Group()
-+                background = Background('a1_m2.jpg', (600, 1300))
-+                all_sprites.add(background)
-+                player = PlayerAct1(285, 950)
-+                player.loc = 1
-+                wizardRus.rect.x = 285
-+                wizardRus.rect.y = 600
-+                wizardRus.canRun = False
-+                wizardRus.y = 600
-+                all_sprites.add(wizardRus)
-+                door = Door(260, 300)
-+            elif self.loc == 1:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                door_group = pygame.sprite.Group()
-+                background = Background('a1_m3.jpg', (1300, 600))
-+                all_sprites.add(background)
-+                door = Door(80, 60)
-+                player = PlayerAct1(650, 300)
-+                player.loc = 2
-+            elif self.loc == 2:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                background = Background('a1_m4.jpg', (700, 500))
-+                all_sprites.add(background)
-+                player = PlayerAct1(375, 300)
-+                player.loc = 3
-+                mathGame()
-+
-+        camera.update(player)
-+        for sprite in all_sprites:
-+            camera.apply(sprite)
-+
-+
-+def newDialog():
-+    font = pygame.font.Font(None, 30)
-+    t1 = font.render('', True, (255, 255, 255))
-+    t2 = font.render('', True, (255, 255, 255))
-+    t3 = font.render('', True, (255, 255, 255))
-+    return t1, t2, t3
-+
-+
-+def mathGame():
-+    global background, all_sprites, player_group, player, door, door_group
-+    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+
-+    n1 = random.randint(0, 100)
-+    n3 = random.randint(0, 9)
-+    n2 = n3 - n1
-+    m = 'Я великий маг этого подземелья,'
-+    m2 = 'и я никому не дам ходить по нему'
-+    m3 = 'без моего разрешения!'
-+    screen.fill((0, 0, 0))
-+    screen.blit(fon, (0, 0))
-+    font = pygame.font.Font(None, 30)
-+    t1, t2, t3 = newDialog()
-+
-+    win = False
-+    i = 1
-+    a = 0
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_z and a == 0:
-+                    screen.fill((0, 0, 0))
-+                    screen.blit(fon, (0, 0))
-+                    if n2 < 0:
-+                        m1 = f"{n1}{n2}"
-+                    else:
-+                        m1 = f"{n1}+{n2}"
-+                    m = 'Но ты можешь попытать удачу,'
-+                    m2 = 'и решить мою задачу'
-+                    m3 = 'сколько будет:' + m1
-+                    t1, t2, t3 = newDialog()
-+                    i = 1
-+                    a = 1
-+                elif 48 <= event.key <= 58 and a == 1:
-+                    m = event.key - 48
-+                    t1, t2, t3 = newDialog()
-+                    if m == n3:
-+                        screen.fill((0, 0, 0))
-+                        screen.blit(fon, (0, 0))
-+                        m = 'Я вижу, что ты силен в математике'
-+                        m2 = 'на этот раз я тебя пропукаю,'
-+                        m3 = 'но мы еще встретимся!'
-+                        win = True
-+                    else:
-+                        screen.fill((0, 0, 0))
-+                        screen.blit(fon, (0, 0))
-+                        m = 'Я вижу, что ты слаб,'
-+                        m2 = 'возвращайся,'
-+                        m3 = 'лишь когда будешь достоен'
-+                    i = 1
-+                    a = 2
-+                elif event.key == pygame.K_z and a == 2:
-+                    if win:
-+                        all_sprites = pygame.sprite.Group()
-+                        player_group = pygame.sprite.Group()
-+                        background = Background('a1_m5.jpg', (1200, 700))
-+                        all_sprites.add(background)
-+                        player = PlayerAct1(600, 450)
-+                        camera.update(player)
-+                        for sprite in all_sprites:
-+                            camera.apply(sprite)
-+                        return
-+                    else:
-+                        act1()
-+                        return
-+
-+        if i <= len(m):
-+            t1 = font.render(m[:i], True, (255, 255, 255))
-+        elif i <= len(m) + len(m2):
-+            t2 = font.render(m2[:i - len(m)], True, (255, 255, 255))
-+        elif i <= len(m) + len(m2) + len(m3):
-+            t3 = font.render(m3[:i - len(m) - len(m2)], True, (255, 255, 255))
-+        i += 1
-+        screen.blit(t1, (230, 85))
-+        screen.blit(t2, (230, 115))
-+        screen.blit(t3, (230, 145))
-+        player_group.draw(screen)
-+        pygame.display.flip()
-+        clock.tick(20)
-+        clock.tick(FPS)
-+
-+
-+class Background(pygame.sprite.Sprite):
-+    def __init__(self, image_path, size):
-+        super().__init__()
-+        self.image = load_image(image_path)
-+        self.image = pygame.transform.scale(self.image, size)
-+        self.rect = self.image.get_rect()
-+
-+    def get_rgb(self, x, y):
-+        pixel = pygame.PixelArray(self.image)
-+        return self.image.unmap_rgb(pixel[x][y])
-+
-+
-+clock = pygame.time.Clock()
-+FPS = 60
-+
-+
-+def terminate():
-+    pygame.quit()
-+    sys.exit()
-+
-+
-+def start_screen():
-+    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(0.7)
-+    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif (event.type == pygame.KEYDOWN or event.type ==
-+                  pygame.MOUSEBUTTONDOWN):
-+                if True:
-+                    act1()
-+                    return
-+        clock.tick(FPS)
-+
-+
-+class Door(pygame.sprite.Sprite):
-+    image_path = load_image('exit-enter_a1.png')
-+    image_path = pygame.transform.scale(image_path, (120, 96))
-+    sprite_image = image_path
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(all_sprites)
-+        self.image = Door.sprite_image
-+        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)
-+        self.mask = pygame.mask.from_surface(self.image)
-+
-+
-+# группы спрайтов
-+all_sprites = pygame.sprite.Group()
-+player_group = pygame.sprite.Group()
-+door_group = pygame.sprite.Group()
-+player = Player(400, 100)
-+
-+
-+class wizardRus(pygame.sprite.Sprite):
-+    image = load_image('wizardRus.jpg')
-+    image = pygame.transform.scale(image, (80, 90))
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(all_sprites)
-+        self.image = wizardRus.image
-+        self.rect = self.image.get_rect().move(
-+            pos_x, pos_y)
-+        self.canRun = False
-+        self.y = pos_y
-+
-+    def update(self):
-+        if self.canRun:
-+            self.rect.y -= 10
-+            self.y -= 10
-+            if self.y <= 300:
-+                self.rect.y = -1000
-+        if player.y <= 800:
-+            self.canRun = True
-+
-+
-+wizardRus = wizardRus(2000, 2000)
-+
-+
-+def act1():
-+    global all_sprites, player_group, player, background, door, door_group
-+    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+    all_sprites = pygame.sprite.Group()
-+    player_group = pygame.sprite.Group()
-+    door_group = pygame.sprite.Group()
-+    background = Background('a1_m1(1).png', (1360, 760))
-+    door = Door(1200, 200)
-+    all_sprites.add(background)
-+    door_group.add(door)
-+    player = PlayerAct1(400, 100)
-+
-+
-+def act2():
-+    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+
-+
-+def act3():
-+    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+
-+
-+def menu():
-+    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_1:
-+                    act1()
-+                    return
-+                if event.key == pygame.K_2:
-+                    act2()
-+                    return
-+                if event.key == pygame.K_3:
-+                    act3()
-+                    return
-+                if event.key == pygame.K_p:
-+                    return
-+
-+        clock.tick(FPS)
-+
-+
-+class Camera:
-+    # зададим начальный сдвиг камеры
-+    def __init__(self):
-+        self.dx = 0
-+        self.dy = 0
-+
-+    def apply(self, obj):
-+        obj.rect.x += self.dx
-+        obj.rect.y += self.dy
-+
-+    # позиционировать камеру на объекте target
-+    def update(self, target):
-+        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)
-+        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)
-+
-+
-+camera = Camera()
-+if __name__ == '__main__':
-+    pygame.init()
-+    pygame.display.set_caption('Entangled Tale')
-+    size = width, height = 800, 500
-+    screen = pygame.display.set_mode(size)
-+    start_screen()
-+
-+    running = True
-+    while running:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                running = False
-+            if event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_o:
-+                    menu()
-+            if event.type == pygame.KEYUP:
-+                player.stop()
-+        keys = pygame.key.get_pressed()
-+
-+        screen.fill((0, 0, 0))
-+        # Обновление игровых объектов
-+        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],
-+                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])
-+        player.update(keys[pygame.K_w], keys[pygame.K_s],
-+                      keys[pygame.K_a], keys[pygame.K_d])
-+        # обновляем положение всех спрайтов
-+        for sprite in all_sprites:
-+            camera.apply(sprite)
-+        camera.update(player)
-+        wizardRus.update()
-+        all_sprites.draw(screen)
-+        player_group.draw(screen)
-+        door_group.draw(screen)
-+
-+        pygame.display.flip()
-+        clock.tick(FPS)
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"сюжет акта 1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"сюжет акта 1\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 92d448efd4804c1b7ba182f34bf72ed39b82efaa)
-+++ b/.idea/workspace.xml	(date 1702823533884)
-@@ -4,8 +4,17 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1">
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="exit-enter_a1">
-+      <change afterPath="$PROJECT_DIR$/test.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/Menu.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/Menu.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act2.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act2.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act3.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act3.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act4.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act4.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/blackfon.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/blackfon.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/exit-enter_a1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/exit-enter_a1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/wizard.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/wizard.png" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -23,7 +32,7 @@
-   <component name="Git.Settings">
-     <option name="RECENT_BRANCH_BY_REPOSITORY">
-       <map>
--        <entry key="$PROJECT_DIR$" value="master" />
-+        <entry key="$PROJECT_DIR$" value="4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba" />
-       </map>
-     </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -41,7 +50,9 @@
-   &quot;keyToString&quot;: {
-     &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-     &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-+    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,
-     &quot;Python.main.executor&quot;: &quot;Run&quot;,
-+    &quot;Python.test.executor&quot;: &quot;Run&quot;,
-     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-@@ -85,7 +96,7 @@
-   <component name="SharedIndexes">
-     <attachedChunks>
-       <set>
--        <option value="bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259" />
-+        <option value="bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298" />
-       </set>
-     </attachedChunks>
-   </component>
-@@ -122,7 +133,31 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702747008794</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759253894</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759253894</updated>
-+    </task>
-+    <task id="LOCAL-00005" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759279832</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759279832</updated>
-+    </task>
-+    <task id="LOCAL-00006" summary="exit-enter_a1">
-+      <option name="closed" value="true" />
-+      <created>1702812381417</created>
-+      <option name="number" value="00006" />
-+      <option name="presentableId" value="LOCAL-00006" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702812381417</updated>
-+    </task>
-+    <option name="localTasksCounter" value="7" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -140,6 +175,8 @@
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
-     <MESSAGE value="сюжет акта 1" />
--    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-+    <MESSAGE value="animations main character" />
-+    <MESSAGE value="exit-enter_a1" />
-+    <option name="LAST_COMMIT_MESSAGE" value="exit-enter_a1" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,610 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import os\r\nimport random\r\n\r\nimport pygame\r\nimport sys\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n        self.loc = 0\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.direction == 'left':\r\n            image = load_image(f'm.c.left_stop.jpg')\r\n        elif self.direction == 'right':\r\n            image = load_image(f'm.c.right_stop.jpg')\r\n        elif self.direction == 'down':\r\n            image = load_image(f'm.c.front_stop.jpg')\r\n        elif self.direction == 'up':\r\n            image = load_image(f'm.c.back_stop.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n\r\nclass PlayerAct1(Player):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(pos_x, pos_y)\r\n\r\n    def update(self, move_up, move_down, move_left, move_right):\r\n        global all_sprites, background, player, player_group, door_group, door\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= 6\r\n            self.x -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x += 6\r\n                self.x += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.left_walk_{self.step}.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += 6\r\n            self.x += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x -= 6\r\n                self.x -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.right_walk_{self.step}.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= 6\r\n            self.y -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y += 6\r\n                self.y += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.back_walk_{self.step}.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += 6\r\n            self.y += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y -= 6\r\n                self.y -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.front_walk_{self.step}.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if pygame.sprite.collide_mask(self, door):\r\n            if self.loc == 0:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m2.jpg', (600, 1300))\r\n                all_sprites.add(background)\r\n                player = PlayerAct1(285, 950)\r\n                player.loc = 1\r\n                wizardRus.rect.x = 285\r\n                wizardRus.rect.y = 600\r\n                wizardRus.canRun = False\r\n                wizardRus.y = 600\r\n                all_sprites.add(wizardRus)\r\n                door = Door(260, 300)\r\n            elif self.loc == 1:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                door_group = pygame.sprite.Group()\r\n                background = Background('a1_m3.jpg', (2100, 500))\r\n                all_sprites.add(background)\r\n                door = Door(1900, 200)\r\n                player = PlayerAct1(450, 200)\r\n                player.loc = 2\r\n            elif self.loc == 2:\r\n                all_sprites = pygame.sprite.Group()\r\n                player_group = pygame.sprite.Group()\r\n                background = Background('a1_m4.jpg', (700, 500))\r\n                all_sprites.add(background)\r\n                player = PlayerAct1(375, 300)\r\n                player.loc = 3\r\n                mathGame()\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\nclass Slova(pygame.sprite.Sprite):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        a = random.choice(['sl1.jpg', 'sl2.jpg', 'sl3.jpg', 'sl4.jpg', 'sl5.jpg'])\r\n        image_path = load_image(a)\r\n        self.image = pygame.transform.scale(image_path, (40, 60))\r\n        self.rect = self.image.get_rect().move(pos_x, pos_y)\r\n\r\n    def update(self):\r\n        self.rect.x -= 10\r\n\r\n\r\ndef newDialog():\r\n    font = pygame.font.Font(None, 30)\r\n    t1 = font.render('', True, (255, 255, 255))\r\n    t2 = font.render('', True, (255, 255, 255))\r\n    t3 = font.render('', True, (255, 255, 255))\r\n    return t1, t2, t3\r\n\r\n\r\ndef mathGame():\r\n    global background, all_sprites, player_group, player, door, door_group\r\n    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n\r\n    n1 = random.randint(0, 100)\r\n    n3 = random.randint(0, 9)\r\n    n2 = n3 - n1\r\n    m = 'Я великий маг этого подземелья,'\r\n    m2 = 'и я никому не дам ходить по нему'\r\n    m3 = 'без моего разрешения!'\r\n    screen.fill((0, 0, 0))\r\n    screen.blit(fon, (0, 0))\r\n    font = pygame.font.Font(None, 30)\r\n    t1, t2, t3 = newDialog()\r\n\r\n    win = False\r\n    i = 1\r\n    a = 0\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_z and a == 0:\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    if n2 < 0:\r\n                        m1 = f\"{n1}{n2}\"\r\n                    else:\r\n                        m1 = f\"{n1}+{n2}\"\r\n                    m = 'Но ты можешь попытать удачу,'\r\n                    m2 = 'и решить мою задачу'\r\n                    m3 = 'сколько будет:' + m1\r\n                    t1, t2, t3 = newDialog()\r\n                    i = 1\r\n                    a = 1\r\n                elif 48 <= event.key <= 58 and a == 1:\r\n                    m = event.key - 48\r\n                    t1, t2, t3 = newDialog()\r\n                    if m == n3:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        m = 'Я вижу, что ты силен в математике'\r\n                        m2 = 'на этот раз я тебя пропукаю,'\r\n                        m3 = 'но мы еще встретимся!'\r\n                        win = True\r\n                    else:\r\n                        screen.fill((0, 0, 0))\r\n                        screen.blit(fon, (0, 0))\r\n                        m = 'Я вижу, что ты слаб,'\r\n                        m2 = 'возвращайся,'\r\n                        m3 = 'лишь когда будешь достоен'\r\n                    i = 1\r\n                    a = 2\r\n                elif event.key == pygame.K_z and a == 2:\r\n                    if win:\r\n                        all_sprites = pygame.sprite.Group()\r\n                        player_group = pygame.sprite.Group()\r\n                        background = Background('a1_m5.jpg', (1200, 700))\r\n                        all_sprites.add(background)\r\n                        player = PlayerAct1(600, 450)\r\n                        camera.update(player)\r\n                        for sprite in all_sprites:\r\n                            camera.apply(sprite)\r\n                        return\r\n                    else:\r\n                        act1()\r\n                        return\r\n\r\n        if i <= len(m):\r\n            t1 = font.render(m[:i], True, (255, 255, 255))\r\n        elif i <= len(m) + len(m2):\r\n            t2 = font.render(m2[:i - len(m)], True, (255, 255, 255))\r\n        elif i <= len(m) + len(m2) + len(m3):\r\n            t3 = font.render(m3[:i - len(m) - len(m2)], True, (255, 255, 255))\r\n        i += 1\r\n        screen.blit(t1, (230, 85))\r\n        screen.blit(t2, (230, 115))\r\n        screen.blit(t3, (230, 145))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(20)\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Door(pygame.sprite.Sprite):\r\n    image_path = load_image('exit-enter_a1.png')\r\n    image_path = pygame.transform.scale(image_path, (450, 450))\r\n    sprite_image = image_path\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = Door.sprite_image\r\n        self.rect = self.image.get_rect().move(pos_x - 125, pos_y - 125)\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\ndoor_group = pygame.sprite.Group()\r\nplayer = Player(400, 100)\r\n\r\n\r\nclass wizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.jpg')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = wizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = wizardRus(2000, 2000)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background, door, door_group\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    door_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.jpg', (1360, 520))\r\n    door = Door(1200, 200)\r\n    all_sprites.add(background)\r\n    door_group.add(door)\r\n    player = PlayerAct1(400, 100)\r\n\r\n\r\ndef act2():\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef act3():\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef menu():\r\n    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_1:\r\n                    act1()\r\n                    return\r\n                if event.key == pygame.K_2:\r\n                    act2()\r\n                    return\r\n                if event.key == pygame.K_3:\r\n                    act3()\r\n                    return\r\n                if event.key == pygame.K_p:\r\n                    return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\ncamera = Camera()\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    i = 0\r\n\r\n    slova_group = pygame.sprite.Group()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_o:\r\n                    menu()\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n        keys = pygame.key.get_pressed()\r\n\r\n        screen.fill((0, 0, 0))\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        player_group.draw(screen)\r\n        if player.loc == 2:\r\n            i += 1\r\n            if i % 25 == 0:\r\n                slovo = Slova(1500, random.randint(200, 300))\r\n                slova_group.add(slovo)\r\n            slova_group.update()\r\n            slova_group.draw(screen)\r\n        door_group.draw(screen)\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision e5ca83d9d904b91139c14deafe6bf9735a94db53)
-+++ b/main.py	(date 1702823427250)
-@@ -334,13 +334,13 @@
- 
- class Door(pygame.sprite.Sprite):
-     image_path = load_image('exit-enter_a1.png')
--    image_path = pygame.transform.scale(image_path, (450, 450))
-+    image_path = pygame.transform.scale(image_path, (120, 96))
-     sprite_image = image_path
- 
-     def __init__(self, pos_x, pos_y):
-         super().__init__(all_sprites)
-         self.image = Door.sprite_image
--        self.rect = self.image.get_rect().move(pos_x - 125, pos_y - 125)
-+        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)
-         self.mask = pygame.mask.from_surface(self.image)
- 
- 
-Index: test.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/test.py b/test.py
-new file mode 100644
---- /dev/null	(date 1702823220718)
-+++ b/test.py	(date 1702823220718)
-@@ -0,0 +1,473 @@
-+import os
-+import random
-+
-+import pygame
-+import sys
-+
-+
-+def load_image(name, colorkey=None):
-+    fullname = os.path.join('data', name)
-+    # если файл не существует, то выходим
-+    if not os.path.isfile(fullname):
-+        print(f"Файл с изображением '{fullname}' не найден")
-+        sys.exit()
-+    image = pygame.image.load(fullname)
-+    if colorkey is not None:
-+        if colorkey == -1:
-+            colorkey = image.get_at((0, 0))
-+        image.set_colorkey(colorkey)
-+    return image
-+
-+
-+class Player(pygame.sprite.Sprite):
-+    image = load_image('m.c.front_stop.jpg')
-+    image = pygame.transform.scale(image, (40, 60))
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(player_group, all_sprites)
-+        self.image = Player.image
-+        self.rect = self.image.get_rect().move(
-+            pos_x, pos_y)
-+        self.x = pos_x + 20
-+        self.y = pos_y + 60
-+        self.step = 1
-+        self.back = False
-+        self.last_skin_change_time = 0
-+        self.direction = ''
-+        self.mask = pygame.mask.from_surface(self.image)
-+
-+    def stop(self):
-+        image = self.image
-+        if self.direction == 'left':
-+            image = load_image(f'm.c.left_stop.jpg')
-+        elif self.direction == 'right':
-+            image = load_image(f'm.c.right_stop.jpg')
-+        elif self.direction == 'down':
-+            image = load_image(f'm.c.front_stop.jpg')
-+        elif self.direction == 'up':
-+            image = load_image(f'm.c.back_stop.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+
-+
-+class PlayerAct1(Player):
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(pos_x, pos_y)
-+        self.loc = 0
-+
-+    def update(self, move_up, move_down, move_left, move_right):
-+        global all_sprites, background, player, player_group, door_group, door
-+        image = self.image
-+        current_time = pygame.time.get_ticks()
-+        if move_left:
-+            self.direction = 'left'
-+            self.rect.x -= 6
-+            self.x -= 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.x += 6
-+                self.x += 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.left_walk_{self.step}.jpg')
-+        if move_right:
-+            self.direction = 'right'
-+            self.rect.x += 6
-+            self.x += 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.x -= 6
-+                self.x -= 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.right_walk_{self.step}.jpg')
-+        if move_up:
-+            self.direction = 'up'
-+            self.rect.y -= 6
-+            self.y -= 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.y += 6
-+                self.y += 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.back_walk_{self.step}.jpg')
-+        if move_down:
-+            self.direction = 'down'
-+            self.rect.y += 6
-+            self.y += 6
-+            if background.get_rgb(self.x, self.y) == (2, 0, 0):
-+                self.rect.y -= 6
-+                self.y -= 6
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.front_walk_{self.step}.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+        if pygame.sprite.collide_mask(self, door):
-+            if self.loc == 0:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                door_group = pygame.sprite.Group()
-+                background = Background('a1_m2.jpg', (600, 1300))
-+                all_sprites.add(background)
-+                player = PlayerAct1(285, 950)
-+                player.loc = 1
-+                wizardRus.rect.x = 285
-+                wizardRus.rect.y = 600
-+                wizardRus.canRun = False
-+                wizardRus.y = 600
-+                all_sprites.add(wizardRus)
-+                door = Door(260, 300)
-+            elif self.loc == 1:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                door_group = pygame.sprite.Group()
-+                background = Background('a1_m3.jpg', (1300, 600))
-+                all_sprites.add(background)
-+                door = Door(80, 60)
-+                player = PlayerAct1(650, 300)
-+                player.loc = 2
-+            elif self.loc == 2:
-+                all_sprites = pygame.sprite.Group()
-+                player_group = pygame.sprite.Group()
-+                background = Background('a1_m4.jpg', (700, 500))
-+                all_sprites.add(background)
-+                player = PlayerAct1(375, 300)
-+                player.loc = 3
-+                mathGame()
-+
-+        camera.update(player)
-+        for sprite in all_sprites:
-+            camera.apply(sprite)
-+
-+
-+def newDialog():
-+    font = pygame.font.Font(None, 30)
-+    t1 = font.render('', True, (255, 255, 255))
-+    t2 = font.render('', True, (255, 255, 255))
-+    t3 = font.render('', True, (255, 255, 255))
-+    return t1, t2, t3
-+
-+
-+def mathGame():
-+    global background, all_sprites, player_group, player, door, door_group
-+    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+
-+    n1 = random.randint(0, 100)
-+    n3 = random.randint(0, 9)
-+    n2 = n3 - n1
-+    m = 'Я великий маг этого подземелья,'
-+    m2 = 'и я никому не дам ходить по нему'
-+    m3 = 'без моего разрешения!'
-+    screen.fill((0, 0, 0))
-+    screen.blit(fon, (0, 0))
-+    font = pygame.font.Font(None, 30)
-+    t1, t2, t3 = newDialog()
-+
-+    win = False
-+    i = 1
-+    a = 0
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_z and a == 0:
-+                    screen.fill((0, 0, 0))
-+                    screen.blit(fon, (0, 0))
-+                    if n2 < 0:
-+                        m1 = f"{n1}{n2}"
-+                    else:
-+                        m1 = f"{n1}+{n2}"
-+                    m = 'Но ты можешь попытать удачу,'
-+                    m2 = 'и решить мою задачу'
-+                    m3 = 'сколько будет:' + m1
-+                    t1, t2, t3 = newDialog()
-+                    i = 1
-+                    a = 1
-+                elif 48 <= event.key <= 58 and a == 1:
-+                    m = event.key - 48
-+                    t1, t2, t3 = newDialog()
-+                    if m == n3:
-+                        screen.fill((0, 0, 0))
-+                        screen.blit(fon, (0, 0))
-+                        m = 'Я вижу, что ты силен в математике'
-+                        m2 = 'на этот раз я тебя пропукаю,'
-+                        m3 = 'но мы еще встретимся!'
-+                        win = True
-+                    else:
-+                        screen.fill((0, 0, 0))
-+                        screen.blit(fon, (0, 0))
-+                        m = 'Я вижу, что ты слаб,'
-+                        m2 = 'возвращайся,'
-+                        m3 = 'лишь когда будешь достоен'
-+                    i = 1
-+                    a = 2
-+                elif event.key == pygame.K_z and a == 2:
-+                    if win:
-+                        all_sprites = pygame.sprite.Group()
-+                        player_group = pygame.sprite.Group()
-+                        background = Background('a1_m5.jpg', (1200, 700))
-+                        all_sprites.add(background)
-+                        player = PlayerAct1(600, 450)
-+                        camera.update(player)
-+                        for sprite in all_sprites:
-+                            camera.apply(sprite)
-+                        return
-+                    else:
-+                        act1()
-+                        return
-+
-+        if i <= len(m):
-+            t1 = font.render(m[:i], True, (255, 255, 255))
-+        elif i <= len(m) + len(m2):
-+            t2 = font.render(m2[:i - len(m)], True, (255, 255, 255))
-+        elif i <= len(m) + len(m2) + len(m3):
-+            t3 = font.render(m3[:i - len(m) - len(m2)], True, (255, 255, 255))
-+        i += 1
-+        screen.blit(t1, (230, 85))
-+        screen.blit(t2, (230, 115))
-+        screen.blit(t3, (230, 145))
-+        player_group.draw(screen)
-+        pygame.display.flip()
-+        clock.tick(20)
-+        clock.tick(FPS)
-+
-+
-+class Background(pygame.sprite.Sprite):
-+    def __init__(self, image_path, size):
-+        super().__init__()
-+        self.image = load_image(image_path)
-+        self.image = pygame.transform.scale(self.image, size)
-+        self.rect = self.image.get_rect()
-+
-+    def get_rgb(self, x, y):
-+        pixel = pygame.PixelArray(self.image)
-+        return self.image.unmap_rgb(pixel[x][y])
-+
-+
-+clock = pygame.time.Clock()
-+FPS = 60
-+
-+
-+def terminate():
-+    pygame.quit()
-+    sys.exit()
-+
-+
-+def start_screen():
-+    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(0.7)
-+    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif (event.type == pygame.KEYDOWN or event.type ==
-+                  pygame.MOUSEBUTTONDOWN):
-+                if True:
-+                    act1()
-+                    return
-+        clock.tick(FPS)
-+
-+
-+class Door(pygame.sprite.Sprite):
-+    image_path = load_image('exit-enter_a1.png')
-+    image_path = pygame.transform.scale(image_path, (120, 96))
-+    sprite_image = image_path
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(all_sprites)
-+        self.image = Door.sprite_image
-+        self.rect = self.image.get_rect().move(pos_x, pos_y + 20)
-+        self.mask = pygame.mask.from_surface(self.image)
-+
-+
-+# группы спрайтов
-+all_sprites = pygame.sprite.Group()
-+player_group = pygame.sprite.Group()
-+door_group = pygame.sprite.Group()
-+player = Player(400, 100)
-+
-+
-+class wizardRus(pygame.sprite.Sprite):
-+    image = load_image('wizardRus.jpg')
-+    image = pygame.transform.scale(image, (80, 90))
-+
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(all_sprites)
-+        self.image = wizardRus.image
-+        self.rect = self.image.get_rect().move(
-+            pos_x, pos_y)
-+        self.canRun = False
-+        self.y = pos_y
-+
-+    def update(self):
-+        if self.canRun:
-+            self.rect.y -= 10
-+            self.y -= 10
-+            if self.y <= 300:
-+                self.rect.y = -1000
-+        if player.y <= 800:
-+            self.canRun = True
-+
-+
-+wizardRus = wizardRus(2000, 2000)
-+
-+
-+def act1():
-+    global all_sprites, player_group, player, background, door, door_group
-+    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+    all_sprites = pygame.sprite.Group()
-+    player_group = pygame.sprite.Group()
-+    door_group = pygame.sprite.Group()
-+    background = Background('a1_m1(1).png', (1360, 760))
-+    door = Door(1200, 200)
-+    all_sprites.add(background)
-+    door_group.add(door)
-+    player = PlayerAct1(400, 100)
-+
-+
-+def act2():
-+    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+
-+
-+def act3():
-+    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    clock.tick(1)
-+
-+
-+def menu():
-+    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))
-+    screen.blit(fon, (0, 0))
-+    pygame.display.flip()
-+    while True:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                terminate()
-+            elif event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_1:
-+                    act1()
-+                    return
-+                if event.key == pygame.K_2:
-+                    act2()
-+                    return
-+                if event.key == pygame.K_3:
-+                    act3()
-+                    return
-+                if event.key == pygame.K_p:
-+                    return
-+
-+        clock.tick(FPS)
-+
-+
-+class Camera:
-+    # зададим начальный сдвиг камеры
-+    def __init__(self):
-+        self.dx = 0
-+        self.dy = 0
-+
-+    def apply(self, obj):
-+        obj.rect.x += self.dx
-+        obj.rect.y += self.dy
-+
-+    # позиционировать камеру на объекте target
-+    def update(self, target):
-+        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)
-+        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)
-+
-+
-+camera = Camera()
-+if __name__ == '__main__':
-+    pygame.init()
-+    pygame.display.set_caption('Entangled Tale')
-+    size = width, height = 800, 500
-+    screen = pygame.display.set_mode(size)
-+    start_screen()
-+
-+    running = True
-+    while running:
-+        for event in pygame.event.get():
-+            if event.type == pygame.QUIT:
-+                running = False
-+            if event.type == pygame.KEYDOWN:
-+                if event.key == pygame.K_o:
-+                    menu()
-+            if event.type == pygame.KEYUP:
-+                player.stop()
-+        keys = pygame.key.get_pressed()
-+
-+        screen.fill((0, 0, 0))
-+        # Обновление игровых объектов
-+        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],
-+                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])
-+        player.update(keys[pygame.K_w], keys[pygame.K_s],
-+                      keys[pygame.K_a], keys[pygame.K_d])
-+        # обновляем положение всех спрайтов
-+        for sprite in all_sprites:
-+            camera.apply(sprite)
-+        camera.update(player)
-+        wizardRus.update()
-+        all_sprites.draw(screen)
-+        player_group.draw(screen)
-+        door_group.draw(screen)
-+
-+        pygame.display.flip()
-+        clock.tick(FPS)
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"сюжет акта 1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"сюжет акта 1\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision e5ca83d9d904b91139c14deafe6bf9735a94db53)
-+++ b/.idea/workspace.xml	(date 1702823245449)
-@@ -4,8 +4,17 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1">
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="exit-enter_a1">
-+      <change afterPath="$PROJECT_DIR$/test.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/Menu.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/Menu.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act2.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act2.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act3.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act3.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act4.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act4.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/blackfon.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/blackfon.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/exit-enter_a1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/exit-enter_a1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/wizard.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/wizard.png" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -23,7 +32,7 @@
-   <component name="Git.Settings">
-     <option name="RECENT_BRANCH_BY_REPOSITORY">
-       <map>
--        <entry key="$PROJECT_DIR$" value="master" />
-+        <entry key="$PROJECT_DIR$" value="4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba" />
-       </map>
-     </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -41,7 +50,9 @@
-   &quot;keyToString&quot;: {
-     &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
-     &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-+    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,
-     &quot;Python.main.executor&quot;: &quot;Run&quot;,
-+    &quot;Python.test.executor&quot;: &quot;Run&quot;,
-     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-     &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-@@ -85,7 +96,7 @@
-   <component name="SharedIndexes">
-     <attachedChunks>
-       <set>
--        <option value="bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259" />
-+        <option value="bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298" />
-       </set>
-     </attachedChunks>
-   </component>
-@@ -122,7 +133,31 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702747008794</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759253894</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759253894</updated>
-+    </task>
-+    <task id="LOCAL-00005" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759279832</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759279832</updated>
-+    </task>
-+    <task id="LOCAL-00006" summary="exit-enter_a1">
-+      <option name="closed" value="true" />
-+      <created>1702812381417</created>
-+      <option name="number" value="00006" />
-+      <option name="presentableId" value="LOCAL-00006" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702812381417</updated>
-+    </task>
-+    <option name="localTasksCounter" value="7" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -140,6 +175,8 @@
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
-     <MESSAGE value="сюжет акта 1" />
--    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-+    <MESSAGE value="animations main character" />
-+    <MESSAGE value="exit-enter_a1" />
-+    <option name="LAST_COMMIT_MESSAGE" value="exit-enter_a1" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,82 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import os\r\nimport random\r\n\r\nimport pygame\r\nimport sys\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n        self.step = 1\r\n        self.back = False\r\n        self.last_skin_change_time = 0\r\n        self.direction = ''\r\n\r\n    def stop(self):\r\n        image = self.image\r\n        if self.direction == 'left':\r\n            image = load_image(f'm.c.left_stop.jpg')\r\n        elif self.direction == 'right':\r\n            image = load_image(f'm.c.right_stop.jpg')\r\n        elif self.direction == 'down':\r\n            image = load_image(f'm.c.front_stop.jpg')\r\n        elif self.direction == 'up':\r\n            image = load_image(f'm.c.back_stop.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n\r\n\r\nclass PlayerAct1(Player):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(pos_x, pos_y)\r\n\r\n    def update(self, move_up, move_down, move_left, move_right):\r\n        global all_sprites, background, player, player_group\r\n        image = self.image\r\n        current_time = pygame.time.get_ticks()\r\n        if move_left:\r\n            self.direction = 'left'\r\n            self.rect.x -= 6\r\n            self.x -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x += 6\r\n                self.x += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.left_walk_{self.step}.jpg')\r\n        if move_right:\r\n            self.direction = 'right'\r\n            self.rect.x += 6\r\n            self.x += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x -= 6\r\n                self.x -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.right_walk_{self.step}.jpg')\r\n        if move_up:\r\n            self.direction = 'up'\r\n            self.rect.y -= 6\r\n            self.y -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y += 6\r\n                self.y += 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.back_walk_{self.step}.jpg')\r\n        if move_down:\r\n            self.direction = 'down'\r\n            self.rect.y += 6\r\n            self.y += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y -= 6\r\n                self.y -= 6\r\n            if current_time - self.last_skin_change_time > 150:\r\n                self.last_skin_change_time = current_time\r\n                if self.step == 1:\r\n                    self.step += 1\r\n                    self.back = False\r\n                elif self.step == 2:\r\n                    if self.back:\r\n                        self.step -= 1\r\n                    else:\r\n                        self.step += 1\r\n                elif self.step == 3:\r\n                    self.step -= 1\r\n                    self.back = True\r\n\r\n            image = load_image(f'm.c.front_walk_{self.step}.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if background.get_rgb(self.x, self.y) == (10, 0, 0):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m2.jpg', (600, 1300))\r\n            all_sprites.add(background)\r\n            player = PlayerAct1(285, 950)\r\n            wizardRus.rect.x = 300\r\n            wizardRus.rect.y = 600\r\n            wizardRus.canRun = False\r\n            wizardRus.y = 600\r\n            all_sprites.add(wizardRus)\r\n        elif background.get_rgb(self.x, self.y) == (9, 0, 0):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m3.jpg', (1300, 600))\r\n            all_sprites.add(background)\r\n            player = PlayerAct1(750, 500)\r\n        elif background.get_rgb(self.x, self.y) == (8, 0, 0):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m4.jpg', (700, 500))\r\n            all_sprites.add(background)\r\n            player = PlayerAct1(375, 300)\r\n            mathGame()\r\n\r\n        camera.update(player)\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n\r\n\r\ndef printTextMag(m, y=0):\r\n    m2 = ''\r\n    font = pygame.font.Font(None, 30)\r\n    for i in m:\r\n        m2 += i\r\n        t = font.render(m2, True, (255, 255, 255))\r\n        screen.blit(t, (230, 85 + y))\r\n        player_group.draw(screen)\r\n        pygame.display.flip()\r\n        clock.tick(15)\r\n\r\n\r\ndef mathGame():\r\n    global background, all_sprites, player_group, player\r\n    fon = pygame.transform.scale(load_image('a1_m4.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    printTextMag('Я великий маг этого подземелья,')\r\n    printTextMag('и я никому не дам ходить по нему', y=30)\r\n    printTextMag('без моего разрешения!', y=60)\r\n    clock.tick(FPS // 4)\r\n    screen.fill((0, 0, 0))\r\n    screen.blit(fon, (0, 0))\r\n    printTextMag('Но ты можешь попытать удачу,')\r\n    printTextMag('и решить мою задачу', y=30)\r\n    printTextMag('сколько будет:', y=60)\r\n\r\n    n1 = random.randint(0, 100)\r\n    n3 = random.randint(0, 9)\r\n    n2 = n3 - n1\r\n    if n2 < 0:\r\n        m = f\"{n1}{n2}\"\r\n    else:\r\n        m = f\"{n1}+{n2}\"\r\n    printTextMag(m, y=90)\r\n\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                m = event.key - 48\r\n                if m == n3:\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    printTextMag('Я вижу, что ты силен в математике')\r\n                    printTextMag('на этот раз я тебя пропукаю,', y=30)\r\n                    printTextMag('но мы еще встретимся!', y=60)\r\n                    clock.tick(FPS // 4)\r\n                    all_sprites = pygame.sprite.Group()\r\n                    player_group = pygame.sprite.Group()\r\n                    background = Background('a1_m5.jpg', (1200, 700))\r\n                    all_sprites.add(background)\r\n                    player = PlayerAct1(600, 450)\r\n                    camera.update(player)\r\n                    for sprite in all_sprites:\r\n                        camera.apply(sprite)\r\n                    return\r\n                else:\r\n                    screen.fill((0, 0, 0))\r\n                    screen.blit(fon, (0, 0))\r\n                    printTextMag('Я вижу, что ты слаб,')\r\n                    printTextMag('возвращайся,', y=30)\r\n                    printTextMag('лишь когда будешь достоен', y=60)\r\n                    clock.tick(FPS // 4)\r\n                    act1()\r\n                    all_sprites = pygame.sprite.Group()\r\n                    player_group = pygame.sprite.Group()\r\n                    background = Background('a1_m1.jpg', (1360, 520))\r\n                    all_sprites.add(background)\r\n                    player = PlayerAct1(400, 100)\r\n                    camera.update(player)\r\n                    for sprite in all_sprites:\r\n                        camera.apply(sprite)\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\nbackground = Background('a1_m1.jpg', (1360, 520))\r\nall_sprites.add(background)\r\nplayer = Player(400, 100)\r\n\r\n\r\nclass wizardRus(pygame.sprite.Sprite):\r\n    image = load_image('wizardRus.jpg')\r\n    image = pygame.transform.scale(image, (80, 90))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(all_sprites)\r\n        self.image = wizardRus.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.canRun = False\r\n        self.y = pos_y\r\n\r\n    def update(self):\r\n        if self.canRun:\r\n            self.rect.y -= 10\r\n            self.y -= 10\r\n            if self.y <= 300:\r\n                self.rect.y = -1000\r\n        if player.y <= 800:\r\n            self.canRun = True\r\n\r\n\r\nwizardRus = wizardRus(2000, 2000)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.jpg', (1360, 520))\r\n    all_sprites.add(background)\r\n    player = PlayerAct1(400, 100)\r\n\r\n\r\ndef act2():\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef act3():\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef menu():\r\n    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_1:\r\n                    act1()\r\n                    return\r\n                if event.key == pygame.K_2:\r\n                    act2()\r\n                    return\r\n                if event.key == pygame.K_3:\r\n                    act3()\r\n                    return\r\n                if event.key == pygame.K_p:\r\n                    return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\ncamera = Camera()\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_o:\r\n                    menu()\r\n            if event.type == pygame.KEYUP:\r\n                player.stop()\r\n        keys = pygame.key.get_pressed()\r\n\r\n        screen.fill((0, 0, 0))\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        camera.update(player)\r\n        wizardRus.update()\r\n        all_sprites.draw(screen)\r\n        player_group.draw(screen)\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision fce8dd085b0a1c56b78f1f186e41c2bcc53f872b)
-+++ b/main.py	(date 1702809710572)
-@@ -184,7 +184,7 @@
-         screen.blit(t, (230, 85 + y))
-         player_group.draw(screen)
-         pygame.display.flip()
--        clock.tick(15)
-+        clock.tick(30)
- 
- 
- def mathGame():
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"сюжет акта 1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"сюжет акта 1\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision fce8dd085b0a1c56b78f1f186e41c2bcc53f872b)
-+++ b/.idea/workspace.xml	(date 1702810528800)
-@@ -4,7 +4,7 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1">
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="animations main character">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-     </list>
-@@ -85,7 +85,7 @@
-   <component name="SharedIndexes">
-     <attachedChunks>
-       <set>
--        <option value="bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259" />
-+        <option value="bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298" />
-       </set>
-     </attachedChunks>
-   </component>
-@@ -122,7 +122,23 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702747008794</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759253894</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759253894</updated>
-+    </task>
-+    <task id="LOCAL-00005" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759279832</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759279832</updated>
-+    </task>
-+    <option name="localTasksCounter" value="6" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -140,6 +156,7 @@
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
-     <MESSAGE value="сюжет акта 1" />
--    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-+    <MESSAGE value="animations main character" />
-+    <option name="LAST_COMMIT_MESSAGE" value="animations main character" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]" date="1702810536420" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17.12.2023 13:55 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,205 +0,0 @@
-Index: main.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import os\r\nimport pygame\r\nimport sys\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if colorkey is not None:\r\n        if colorkey == -1:\r\n            colorkey = image.get_at((0, 0))\r\n        image.set_colorkey(colorkey)\r\n    return image\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    image = load_image('m.c.front_stop.jpg')\r\n    image = pygame.transform.scale(image, (40, 60))\r\n\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(player_group, all_sprites)\r\n        self.image = Player.image\r\n        self.rect = self.image.get_rect().move(\r\n            pos_x, pos_y)\r\n        self.x = pos_x + 20\r\n        self.y = pos_y + 60\r\n\r\n\r\nclass PlayerAct1(Player):\r\n    def __init__(self, pos_x, pos_y):\r\n        super().__init__(pos_x, pos_y)\r\n\r\n    def update(self, move_up, move_down, move_left, move_right):\r\n        global all_sprites, background, player, player_group\r\n        image = self.image\r\n        if move_left:\r\n            self.rect.x -= 6\r\n            self.x -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x += 6\r\n                self.x += 6\r\n            image = load_image('m.c.left_stop.jpg')\r\n        if move_right:\r\n            self.rect.x += 6\r\n            self.x += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.x -= 6\r\n                self.x -= 6\r\n            image = load_image('m.c.right_stop.jpg')\r\n        if move_up:\r\n            self.rect.y -= 6\r\n            self.y -= 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y += 6\r\n                self.y += 6\r\n            image = load_image('m.c.back_stop.jpg')\r\n        if move_down:\r\n            self.rect.y += 6\r\n            self.y += 6\r\n            if background.get_rgb(self.x, self.y) == (2, 0, 0):\r\n                self.rect.y -= 6\r\n                self.y -= 6\r\n            image = load_image('m.c.front_stop.jpg')\r\n        self.image = pygame.transform.scale(image, (40, 60))\r\n        if background.get_rgb(self.x, self.y) == (10, 0, 0):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m2.jpg', (600, 1300))\r\n            all_sprites.add(background)\r\n            player = PlayerAct1(285, 910)\r\n        elif background.get_rgb(self.x, self.y) == (9, 0, 0):\r\n            all_sprites = pygame.sprite.Group()\r\n            player_group = pygame.sprite.Group()\r\n            background = Background('a1_m3.jpg', (1300, 600))\r\n            all_sprites.add(background)\r\n            player = PlayerAct1(750, 500)\r\n\r\n\r\nclass Background(pygame.sprite.Sprite):\r\n    def __init__(self, image_path, size):\r\n        super().__init__()\r\n        self.image = load_image(image_path)\r\n        self.image = pygame.transform.scale(self.image, size)\r\n        self.rect = self.image.get_rect()\r\n\r\n    def get_rgb(self, x, y):\r\n        pixel = pygame.PixelArray(self.image)\r\n        return self.image.unmap_rgb(pixel[x][y])\r\n\r\n\r\nclock = pygame.time.Clock()\r\nFPS = 60\r\n\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef start_screen():\r\n    fon = pygame.transform.scale(load_image('fon.jpg'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(0.7)\r\n    fon = pygame.transform.scale(load_image('blackfon.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif (event.type == pygame.KEYDOWN or event.type ==\r\n                  pygame.MOUSEBUTTONDOWN):\r\n                if True:\r\n                    act1()\r\n                    return\r\n        clock.tick(FPS)\r\n\r\n\r\n# группы спрайтов\r\nall_sprites = pygame.sprite.Group()\r\nplayer_group = pygame.sprite.Group()\r\nbackground = Background('a1_m1.jpg', (1360, 520))\r\nall_sprites.add(background)\r\nplayer = Player(400, 100)\r\n\r\n\r\ndef act1():\r\n    global all_sprites, player_group, player, background\r\n    fon = pygame.transform.scale(load_image('act1.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n    all_sprites = pygame.sprite.Group()\r\n    player_group = pygame.sprite.Group()\r\n    background = Background('a1_m1.jpg', (1360, 520))\r\n    all_sprites.add(background)\r\n    player = PlayerAct1(400, 100)\r\n\r\n\r\ndef act2():\r\n    fon = pygame.transform.scale(load_image('act2.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef act3():\r\n    fon = pygame.transform.scale(load_image('act3.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef act4():\r\n    fon = pygame.transform.scale(load_image('act4.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    clock.tick(1)\r\n\r\n\r\ndef menu():\r\n    fon = pygame.transform.scale(load_image('Menu.png'), (800, 500))\r\n    screen.blit(fon, (0, 0))\r\n    pygame.display.flip()\r\n    while True:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                terminate()\r\n            elif event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_1:\r\n                    act1()\r\n                    return\r\n                if event.key == pygame.K_2:\r\n                    act2()\r\n                    return\r\n                if event.key == pygame.K_3:\r\n                    act3()\r\n                    return\r\n                if event.key == pygame.K_4:\r\n                    act4()\r\n                    return\r\n                if event.key == pygame.K_p:\r\n                    return\r\n\r\n        clock.tick(FPS)\r\n\r\n\r\nclass Camera:\r\n    # зададим начальный сдвиг камеры\r\n    def __init__(self):\r\n        self.dx = 0\r\n        self.dy = 0\r\n\r\n    def apply(self, obj):\r\n        obj.rect.x += self.dx\r\n        obj.rect.y += self.dy\r\n\r\n    # позиционировать камеру на объекте target\r\n    def update(self, target):\r\n        self.dx = -(target.rect.x + target.rect.w // 2 - width // 2)\r\n        self.dy = -(target.rect.y + target.rect.h // 2 - height // 2)\r\n\r\n\r\ncamera = Camera()\r\nif __name__ == '__main__':\r\n    pygame.init()\r\n    pygame.display.set_caption('Entangled Tale')\r\n    size = width, height = 800, 500\r\n    screen = pygame.display.set_mode(size)\r\n    start_screen()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_o:\r\n                    menu()\r\n        keys = pygame.key.get_pressed()\r\n\r\n        screen.fill((0, 0, 0))\r\n        camera.update(player)\r\n        # Обновление игровых объектов\r\n        player.update(keys[pygame.K_UP], keys[pygame.K_DOWN],\r\n                      keys[pygame.K_LEFT], keys[pygame.K_RIGHT])\r\n        player.update(keys[pygame.K_w], keys[pygame.K_s],\r\n                      keys[pygame.K_a], keys[pygame.K_d])\r\n        # обновляем положение всех спрайтов\r\n        for sprite in all_sprites:\r\n            camera.apply(sprite)\r\n        all_sprites.draw(screen)\r\n        player_group.draw(screen)\r\n\r\n        pygame.display.flip()\r\n        clock.tick(FPS)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/main.py b/main.py
---- a/main.py	(revision 39c8893ee64b5a66685f05c7cf770c10a41534bd)
-+++ b/main.py	(date 1702755989075)
-@@ -28,43 +28,103 @@
-             pos_x, pos_y)
-         self.x = pos_x + 20
-         self.y = pos_y + 60
--
--
--class PlayerAct1(Player):
--    def __init__(self, pos_x, pos_y):
--        super().__init__(pos_x, pos_y)
-+        self.step = 1
-+        self.back = False
-+        self.last_skin_change_time = 0
-+        self.direction = ''
- 
-     def update(self, move_up, move_down, move_left, move_right):
-         global all_sprites, background, player, player_group
-         image = self.image
-+        current_time = pygame.time.get_ticks()
-         if move_left:
-+            self.direction = 'left'
-             self.rect.x -= 6
-             self.x -= 6
-             if background.get_rgb(self.x, self.y) == (2, 0, 0):
-                 self.rect.x += 6
-                 self.x += 6
--            image = load_image('m.c.left_stop.jpg')
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.left_walk_{self.step}.jpg')
-         if move_right:
-+            self.direction = 'right'
-             self.rect.x += 6
-             self.x += 6
-             if background.get_rgb(self.x, self.y) == (2, 0, 0):
-                 self.rect.x -= 6
-                 self.x -= 6
--            image = load_image('m.c.right_stop.jpg')
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.right_walk_{self.step}.jpg')
-         if move_up:
-+            self.direction = 'up'
-             self.rect.y -= 6
-             self.y -= 6
-             if background.get_rgb(self.x, self.y) == (2, 0, 0):
-                 self.rect.y += 6
-                 self.y += 6
--            image = load_image('m.c.back_stop.jpg')
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.back_walk_{self.step}.jpg')
-         if move_down:
-+            self.direction = 'down'
-             self.rect.y += 6
-             self.y += 6
-             if background.get_rgb(self.x, self.y) == (2, 0, 0):
-                 self.rect.y -= 6
-                 self.y -= 6
--            image = load_image('m.c.front_stop.jpg')
-+            if current_time - self.last_skin_change_time > 150:
-+                self.last_skin_change_time = current_time
-+                if self.step == 1:
-+                    self.step += 1
-+                    self.back = False
-+                elif self.step == 2:
-+                    if self.back:
-+                        self.step -= 1
-+                    else:
-+                        self.step += 1
-+                elif self.step == 3:
-+                    self.step -= 1
-+                    self.back = True
-+
-+            image = load_image(f'm.c.front_walk_{self.step}.jpg')
-         self.image = pygame.transform.scale(image, (40, 60))
-         if background.get_rgb(self.x, self.y) == (10, 0, 0):
-             all_sprites = pygame.sprite.Group()
-@@ -79,6 +139,24 @@
-             all_sprites.add(background)
-             player = PlayerAct1(750, 500)
- 
-+    def stop(self):
-+        print(self.direction)
-+        image = self.image
-+        if self.direction == 'left':
-+            image = load_image(f'm.c.left_stop.jpg')
-+        elif self.direction == 'right':
-+            image = load_image(f'm.c.right_stop.jpg')
-+        elif self.direction == 'down':
-+            image = load_image(f'm.c.front_stop.jpg')
-+        elif self.direction == 'up':
-+            image = load_image(f'm.c.back_stop.jpg')
-+        self.image = pygame.transform.scale(image, (40, 60))
-+
-+
-+class PlayerAct1(Player):
-+    def __init__(self, pos_x, pos_y):
-+        super().__init__(pos_x, pos_y)
-+
- 
- class Background(pygame.sprite.Sprite):
-     def __init__(self, image_path, size):
-@@ -222,6 +300,8 @@
-             if event.type == pygame.KEYDOWN:
-                 if event.key == pygame.K_o:
-                     menu()
-+            if event.type == pygame.KEYUP:
-+                player.stop()
-         keys = pygame.key.get_pressed()
- 
-         screen.fill((0, 0, 0))
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"описание Entangled Tale.txt\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"описание Entangled Tale.txt\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 39c8893ee64b5a66685f05c7cf770c10a41534bd)
-+++ b/.idea/workspace.xml	(date 1702759006820)
-@@ -4,8 +4,9 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="описание Entangled Tale.txt">
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1">
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -113,7 +114,15 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702664023442</updated>
-     </task>
--    <option name="localTasksCounter" value="3" />
-+    <task id="LOCAL-00003" summary="сюжет акта 1">
-+      <option name="closed" value="true" />
-+      <created>1702747008794</created>
-+      <option name="number" value="00003" />
-+      <option name="presentableId" value="LOCAL-00003" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702747008794</updated>
-+    </task>
-+    <option name="localTasksCounter" value="4" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -130,6 +139,7 @@
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
--    <option name="LAST_COMMIT_MESSAGE" value="описание Entangled Tale.txt" />
-+    <MESSAGE value="сюжет акта 1" />
-+    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]" date="1702742285752" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16.12.2023 18:57 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/shelved.patch	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,191 +0,0 @@
-Index: test.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/test.py b/test.py
-new file mode 100644
---- /dev/null	(date 1702817737698)
-+++ b/test.py	(date 1702817737698)
-@@ -0,0 +1,57 @@
-+import pygame
-+import sys
-+import os
-+
-+
-+def load_image(name, colorkey=None):
-+    fullname = os.path.join('data', name)
-+    # если файл не существует, то выходим
-+    if not os.path.isfile(fullname):
-+        print(f"Файл с изображением '{fullname}' не найден")
-+        sys.exit()
-+    image = pygame.image.load(fullname)
-+    if colorkey is not None:
-+        if colorkey == -1:
-+            colorkey = image.get_at((0, 0))
-+        image.set_colorkey(colorkey)
-+    return image
-+
-+
-+# Инициализация Pygame
-+pygame.init()
-+
-+# Размеры окна
-+width, height = 200, 200
-+
-+# Создание окна
-+screen = pygame.display.set_mode((width, height))
-+pygame.display.set_caption("Sprite Example")
-+
-+# Загрузка изображения
-+image_path = load_image('exit-enter_a1.png')
-+image_path = pygame.transform.scale(image_path, (400, 400))
-+sprite_image = image_path
-+
-+# Создание спрайта
-+sprite_rect = sprite_image.get_rect()
-+sprite_rect.center = (width // 2, height // 2)
-+
-+# Основной цикл программы
-+running = True
-+while running:
-+    for event in pygame.event.get():
-+        if event.type == pygame.QUIT:
-+            running = False
-+
-+    # Очистка экрана
-+    screen.fill((0, 0, 0))
-+
-+    # Рисование спрайта на экране
-+    screen.blit(sprite_image, sprite_rect)
-+
-+    # Обновление экрана
-+    pygame.display.flip()
-+
-+# Завершение работы Pygame
-+pygame.quit()
-+sys.exit()
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"сюжет акта 1\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"сюжет акта 1\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 58cc597dbc02fc0beb54361026fa41d5b64d1947)
-+++ b/.idea/workspace.xml	(date 1702817726709)
-@@ -4,9 +4,17 @@
-     <option name="autoReloadType" value="SELECTIVE" />
-   </component>
-   <component name="ChangeListManager">
--    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="сюжет акта 1">
-+    <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="exit-enter_a1">
-+      <change afterPath="$PROJECT_DIR$/test.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/Menu.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/Menu.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act2.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act2.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act3.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act3.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/act4.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/act4.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/blackfon.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/blackfon.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/exit-enter_a1.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/exit-enter_a1.png" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/data/wizard.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/wizard.png" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -23,7 +31,7 @@
-   <component name="Git.Settings">
-     <option name="RECENT_BRANCH_BY_REPOSITORY">
-       <map>
--        <entry key="$PROJECT_DIR$" value="master" />
-+        <entry key="$PROJECT_DIR$" value="4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba" />
-       </map>
-     </option>
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -37,18 +45,20 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">{
--  &quot;keyToString&quot;: {
--    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
--    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
--    &quot;Python.main.executor&quot;: &quot;Run&quot;,
--    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
--    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
--    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale&quot;,
--    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
-+  <component name="PropertiesComponent"><![CDATA[{
-+  "keyToString": {
-+    "ASKED_ADD_EXTERNAL_FILES": "true",
-+    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
-+    "Python.main (4).executor": "Run",
-+    "Python.main.executor": "Run",
-+    "Python.test.executor": "Run",
-+    "RunOnceActivity.OpenProjectViewOnStart": "true",
-+    "RunOnceActivity.ShowReadmeOnStart": "true",
-+    "git-widget-placeholder": "main",
-+    "last_opened_file_path": "C:/Users/Mar1o/PycharmProjects/Entangled Tale",
-+    "settings.editor.selected.configurable": "com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable"
-   }
--}</component>
-+}]]></component>
-   <component name="RecentsManager">
-     <key name="CopyFile.RECENT_KEYS">
-       <recent name="C:\Users\Mar1o\PycharmProjects\Entangled Tale" />
-@@ -85,7 +95,7 @@
-   <component name="SharedIndexes">
-     <attachedChunks>
-       <set>
--        <option value="bundled-python-sdk-67fca87a943a-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.259" />
-+        <option value="bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298" />
-       </set>
-     </attachedChunks>
-   </component>
-@@ -122,7 +132,31 @@
-       <option name="project" value="LOCAL" />
-       <updated>1702747008794</updated>
-     </task>
--    <option name="localTasksCounter" value="4" />
-+    <task id="LOCAL-00004" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759253894</created>
-+      <option name="number" value="00004" />
-+      <option name="presentableId" value="LOCAL-00004" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759253894</updated>
-+    </task>
-+    <task id="LOCAL-00005" summary="animations main character">
-+      <option name="closed" value="true" />
-+      <created>1702759279832</created>
-+      <option name="number" value="00005" />
-+      <option name="presentableId" value="LOCAL-00005" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702759279832</updated>
-+    </task>
-+    <task id="LOCAL-00006" summary="exit-enter_a1">
-+      <option name="closed" value="true" />
-+      <created>1702812381417</created>
-+      <option name="number" value="00006" />
-+      <option name="presentableId" value="LOCAL-00006" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1702812381417</updated>
-+    </task>
-+    <option name="localTasksCounter" value="7" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -140,6 +174,8 @@
-     <MESSAGE value="start" />
-     <MESSAGE value="описание Entangled Tale.txt" />
-     <MESSAGE value="сюжет акта 1" />
--    <option name="LAST_COMMIT_MESSAGE" value="сюжет акта 1" />
-+    <MESSAGE value="animations main character" />
-+    <MESSAGE value="exit-enter_a1" />
-+    <option name="LAST_COMMIT_MESSAGE" value="exit-enter_a1" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,44 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]" date="1702818390264" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 17.12.2023 16:06 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="data/act3.png" />
-    <option name="AFTER_PATH" value="data/act3.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act3.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/Menu.png" />
-    <option name="AFTER_PATH" value="data/Menu.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/Menu.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act4.png" />
-    <option name="AFTER_PATH" value="data/act4.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act4.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/wizard.png" />
-    <option name="AFTER_PATH" value="data/wizard.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/wizard.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act1.png" />
-    <option name="AFTER_PATH" value="data/act1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/exit-enter_a1.png" />
-    <option name="AFTER_PATH" value="data/exit-enter_a1.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/exit-enter_a1.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/blackfon.png" />
-    <option name="AFTER_PATH" value="data/blackfon.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/blackfon.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="data/act2.png" />
-    <option name="AFTER_PATH" value="data/act2.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act2.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17__Changes_.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ /dev/null	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]" date="1702747026165" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 16.12.2023 20:17 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"5 location\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/a1_m5.png\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/data/a1_m5.png\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/exit-enter_a1.png\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/data/yellorect.jpg\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"4119b603b50f1cfc9f75b08b3bdeb4df26e5d3ba\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZacNkP8bUFBkbLijEbVNjAOYsi\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,\r\n    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Python.main (2).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main (4).executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Mar1o/PycharmProjects/Entangled Tale/data/fonts&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\\fonts\" />\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Mar1o\\PycharmProjects\\Entangled Tale\\data\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\r\n      <module name=\"Entangled Tale\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"SDK_NAME\" value=\"Python 3.11 (Entangled Tale)\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-7a29c1521ef0-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.11799.298\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"8b6f0fdc-2b1f-450a-a0fe-df5878d69a75\" name=\"Changes\" comment=\"\" />\r\n      <created>1702663593127</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702663593127</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"start\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702663798679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702663798679</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"описание Entangled Tale.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702664023442</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702664023442</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"сюжет акта 1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702747008794</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702747008794</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759253894</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759253894</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"animations main character\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702759279832</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702759279832</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"exit-enter_a1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702812381417</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702812381417</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"letters and doors fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702825954315</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702825954315</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"first location done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702839963644</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702839963644</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850812808</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850812808</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"second location drawn\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702850825452</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702850825452</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920190819</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920190819</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702920196004</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702920196004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013610372</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013610372</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"third location design done\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013631006</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013631006</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"bugs fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703013686583</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703013686583</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703104830514</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703104830514</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"boss location processed\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703105401348</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703105401348</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"5 location\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1703339118774</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1703339118775</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"19\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"start\" />\r\n    <MESSAGE value=\"описание Entangled Tale.txt\" />\r\n    <MESSAGE value=\"сюжет акта 1\" />\r\n    <MESSAGE value=\"animations main character\" />\r\n    <MESSAGE value=\"exit-enter_a1\" />\r\n    <MESSAGE value=\"letters and doors fix\" />\r\n    <MESSAGE value=\"Merge remote-tracking branch 'origin/main'\" />\r\n    <MESSAGE value=\"first location done\" />\r\n    <MESSAGE value=\"second location drawn\" />\r\n    <MESSAGE value=\"Add files via upload\" />\r\n    <MESSAGE value=\"third location design done\" />\r\n    <MESSAGE value=\"bugs fix\" />\r\n    <MESSAGE value=\"boss location processed\" />\r\n    <MESSAGE value=\"5 location\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"5 location\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/main.py</url>\r\n          <line>799</line>\r\n          <option name=\"timeStamp\" value=\"12\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f99e0aa1fcb527e09c8c367b104ccaee3f4311aa)
+++ b/.idea/workspace.xml	(date 1703510964663)
@@ -5,10 +5,55 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="8b6f0fdc-2b1f-450a-a0fe-df5878d69a75" name="Changes" comment="5 location">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_18_57__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_20_17__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_16_12_2023_23_36__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_13_55__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/Menu.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act2.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act3.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/act4.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/blackfon.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/exit-enter_a1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06_[Changes]/wizard.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_16_06__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/Menu.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act2.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act3.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/act4.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/blackfon.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/exit-enter_a1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26_[Changes]/wizard.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_26__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/Menu.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act2.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act3.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/act4.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/blackfon.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/exit-enter_a1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31_[Changes]/wizard.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_31__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/Menu.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act2.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act3.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/act4.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/blackfon.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/exit-enter_a1.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36_[Changes]/wizard.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_12_2023_17_36__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/a1_m5.png" beforeDir="false" afterPath="$PROJECT_DIR$/data/a1_m5.png" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/exit-enter_a1.png" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/data/yellorect.jpg" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -249,7 +294,15 @@
       <option name="project" value="LOCAL" />
       <updated>1703339118775</updated>
     </task>
-    <option name="localTasksCounter" value="19" />
+    <task id="LOCAL-00019" summary="5 location">
+      <option name="closed" value="true" />
+      <created>1703347045969</created>
+      <option name="number" value="00019" />
+      <option name="presentableId" value="LOCAL-00019" />
+      <option name="project" value="LOCAL" />
+      <updated>1703347045969</updated>
+    </task>
+    <option name="localTasksCounter" value="20" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -285,7 +338,7 @@
       <breakpoints>
         <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
           <url>file://$PROJECT_DIR$/main.py</url>
-          <line>799</line>
+          <line>846</line>
           <option name="timeStamp" value="12" />
         </line-breakpoint>
       </breakpoints>
